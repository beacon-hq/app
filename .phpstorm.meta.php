<?php

declare(strict_types=1);
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {
    use App\Actions\Fortify\ResetUserPassword;
    use App\Actions\Fortify\UpdateUserPassword;
    use App\Models\User;
    use Barryvdh\Debugbar\Console\ClearCommand;
    use Illuminate\Auth\Access\Gate;
    use Illuminate\Auth\Passwords\PasswordBrokerManager;
    use Illuminate\Cache\MemcachedConnector;
    use Illuminate\Config\Repository;
    use Illuminate\Container\Container;
    use Illuminate\Contracts\Auth\Guard;
    use Illuminate\Contracts\Translation\Translator;
    use Illuminate\Database\Connectors\ConnectionFactory;
    use Illuminate\Database\DatabaseTransactionsManager;
    use Illuminate\Database\Eloquent\QueueEntityResolver;
    use Illuminate\Foundation\Auth\Access\Authorizable;
    use Illuminate\Foundation\Console\Kernel;
    use Illuminate\Foundation\Testing\Concerns\InteractsWithContainer;
    use Illuminate\Http\Request;
    use Illuminate\Log\Context\ContextLogProcessor;
    use Illuminate\Mail\MailManager;
    use Illuminate\Queue\Listener;
    use Illuminate\Redis\Connections\PhpRedisConnection;
    use Illuminate\Redis\RedisManager;
    use Illuminate\Routing\CallableDispatcher;
    use Illuminate\Routing\ControllerDispatcher;
    use Illuminate\Routing\Redirector;
    use Illuminate\Routing\Router;
    use Illuminate\Routing\UrlGenerator;
    use Illuminate\Support\Arr;
    use Illuminate\Support\Env;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Facades\Config;
    use Illuminate\Support\Facades\Redirect;
    use Illuminate\Support\Facades\Route;
    use Illuminate\Support\Facades\URL;
    use Illuminate\Support\Facades\View;
    use Illuminate\View\Engines\EngineResolver;
    use Illuminate\View\Factory;
    use Inertia\Ssr\HttpGateway;
    use Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse;
    use Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse;
    use Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse;
    use Laravel\Fortify\Http\Responses\LockoutResponse;
    use Laravel\Fortify\Http\Responses\LoginResponse;
    use Laravel\Fortify\Http\Responses\LogoutResponse;
    use Laravel\Fortify\Http\Responses\PasswordConfirmedResponse;
    use Laravel\Fortify\Http\Responses\PasswordUpdateResponse;
    use Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse;
    use Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse;
    use Laravel\Fortify\Http\Responses\RegisterResponse;
    use Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse;
    use Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse;
    use Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse;
    use Laravel\Fortify\Http\Responses\TwoFactorLoginResponse;
    use Laravel\Fortify\Http\Responses\VerifyEmailResponse;
    use Laravel\Tinker\Console\TinkerCommand;
    use NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler;
    use Psr\Container\ContainerInterface;
    use Spatie\ErrorSolutions\SolutionProviderRepository;
    use Spatie\Ignition\Config\FileConfigManager;
    use Spatie\LaravelIgnition\Renderers\IgnitionExceptionRenderer;

    /**
     * PhpStorm Meta file, to provide autocomplete information for PhpStorm
     *
     * @author Barry vd. Heuvel <barryvdh@gmail.com>
     * @see https://github.com/barryvdh/laravel-ide-helper
     */
    override(new \Illuminate\Contracts\Container\Container(), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(Container::makeWith(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\App::get(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\App::make(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\App::makeWith(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\app(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(\resolve(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));
    override(ContainerInterface::get(0), map([
        '' => '@',
        'Illuminate\Contracts\Auth\Access\Gate' => Gate::class,
        'Illuminate\Contracts\Console\Kernel' => Kernel::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => ExceptionHandler::class,
        'Illuminate\Contracts\Foundation\ExceptionRenderer' => IgnitionExceptionRenderer::class,
        'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
        'Illuminate\Contracts\Log\ContextLogProcessor' => ContextLogProcessor::class,
        'Illuminate\Contracts\Queue\EntityResolver' => QueueEntityResolver::class,
        'Illuminate\Routing\Contracts\CallableDispatcher' => CallableDispatcher::class,
        'Illuminate\Routing\Contracts\ControllerDispatcher' => ControllerDispatcher::class,
        'Inertia\Ssr\Gateway' => HttpGateway::class,
        'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => EmailVerificationNotificationSentResponse::class,
        'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => FailedPasswordConfirmationResponse::class,
        'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => FailedTwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\LockoutResponse' => LockoutResponse::class,
        'Laravel\Fortify\Contracts\LoginResponse' => LoginResponse::class,
        'Laravel\Fortify\Contracts\LogoutResponse' => LogoutResponse::class,
        'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => PasswordConfirmedResponse::class,
        'Laravel\Fortify\Contracts\PasswordUpdateResponse' => PasswordUpdateResponse::class,
        'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => ProfileInformationUpdatedResponse::class,
        'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => RecoveryCodesGeneratedResponse::class,
        'Laravel\Fortify\Contracts\RegisterResponse' => RegisterResponse::class,
        'Laravel\Fortify\Contracts\ResetsUserPasswords' => ResetUserPassword::class,
        'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => TwoFactorConfirmedResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => TwoFactorDisabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => TwoFactorEnabledResponse::class,
        'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => TwoFactorLoginResponse::class,
        'Laravel\Fortify\Contracts\UpdatesUserPasswords' => UpdateUserPassword::class,
        'Laravel\Fortify\Contracts\VerifyEmailResponse' => VerifyEmailResponse::class,
        'Spatie\ErrorSolutions\Contracts\SolutionProviderRepository' => SolutionProviderRepository::class,
        'Spatie\Ignition\Contracts\ConfigManager' => FileConfigManager::class,
        'auth.password' => PasswordBrokerManager::class,
        'command.debugbar.clear' => ClearCommand::class,
        'command.tinker' => TinkerCommand::class,
        'db.factory' => ConnectionFactory::class,
        'db.transactions' => DatabaseTransactionsManager::class,
        'mail.manager' => MailManager::class,
        'memcached.connector' => MemcachedConnector::class,
        'queue.listener' => Listener::class,
        'redis' => RedisManager::class,
        'redis.connection' => PhpRedisConnection::class,
        'view.engine.resolver' => EngineResolver::class,
    ]));

    override(\auth()->user(), map([
        '' => User::class,
    ]));
    override(Guard::user(), map([
        '' => User::class,
    ]));
    override(Auth::user(), map([
        '' => User::class,
    ]));
    override(\request()->user(), map([
        '' => User::class,
    ]));
    override(Request::user(), map([
        '' => User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => User::class,
    ]));

    override(\config(), map([
        'app.name' => 'string',
        'app.env' => 'string',
        'app.debug' => 'boolean',
        'app.url' => 'string',
        'app.frontend_url' => 'string',
        'app.asset_url' => 'NULL',
        'app.timezone' => 'string',
        'app.locale' => 'string',
        'app.fallback_locale' => 'string',
        'app.faker_locale' => 'string',
        'app.cipher' => 'string',
        'app.key' => 'string',
        'app.previous_keys' => 'array',
        'app.maintenance.driver' => 'string',
        'app.maintenance.store' => 'string',
        'app.providers' => 'array',
        'app.aliases.App' => 'string',
        'app.aliases.Arr' => 'string',
        'app.aliases.Artisan' => 'string',
        'app.aliases.Auth' => 'string',
        'app.aliases.Blade' => 'string',
        'app.aliases.Broadcast' => 'string',
        'app.aliases.Bus' => 'string',
        'app.aliases.Cache' => 'string',
        'app.aliases.Concurrency' => 'string',
        'app.aliases.Config' => 'string',
        'app.aliases.Context' => 'string',
        'app.aliases.Cookie' => 'string',
        'app.aliases.Crypt' => 'string',
        'app.aliases.Date' => 'string',
        'app.aliases.DB' => 'string',
        'app.aliases.Eloquent' => 'string',
        'app.aliases.Event' => 'string',
        'app.aliases.File' => 'string',
        'app.aliases.Gate' => 'string',
        'app.aliases.Hash' => 'string',
        'app.aliases.Http' => 'string',
        'app.aliases.Js' => 'string',
        'app.aliases.Lang' => 'string',
        'app.aliases.Log' => 'string',
        'app.aliases.Mail' => 'string',
        'app.aliases.Notification' => 'string',
        'app.aliases.Number' => 'string',
        'app.aliases.Password' => 'string',
        'app.aliases.Process' => 'string',
        'app.aliases.Queue' => 'string',
        'app.aliases.RateLimiter' => 'string',
        'app.aliases.Redirect' => 'string',
        'app.aliases.Request' => 'string',
        'app.aliases.Response' => 'string',
        'app.aliases.Route' => 'string',
        'app.aliases.Schedule' => 'string',
        'app.aliases.Schema' => 'string',
        'app.aliases.Session' => 'string',
        'app.aliases.Storage' => 'string',
        'app.aliases.Str' => 'string',
        'app.aliases.URL' => 'string',
        'app.aliases.Uri' => 'string',
        'app.aliases.Validator' => 'string',
        'app.aliases.View' => 'string',
        'app.aliases.Vite' => 'string',
        'auth.defaults.guard' => 'string',
        'auth.defaults.passwords' => 'string',
        'auth.guards.web.driver' => 'string',
        'auth.guards.web.provider' => 'string',
        'auth.guards.sanctum.driver' => 'string',
        'auth.guards.sanctum.provider' => 'NULL',
        'auth.providers.users.driver' => 'string',
        'auth.providers.users.model' => 'string',
        'auth.passwords.users.provider' => 'string',
        'auth.passwords.users.table' => 'string',
        'auth.passwords.users.expire' => 'integer',
        'auth.passwords.users.throttle' => 'integer',
        'auth.password_timeout' => 'integer',
        'beacon.teams.invitation_expiration' => 'object',
        'cache.default' => 'string',
        'cache.stores.array.driver' => 'string',
        'cache.stores.array.serialize' => 'boolean',
        'cache.stores.database.driver' => 'string',
        'cache.stores.database.connection' => 'NULL',
        'cache.stores.database.table' => 'string',
        'cache.stores.database.lock_connection' => 'NULL',
        'cache.stores.database.lock_table' => 'NULL',
        'cache.stores.file.driver' => 'string',
        'cache.stores.file.path' => 'string',
        'cache.stores.file.lock_path' => 'string',
        'cache.stores.memcached.driver' => 'string',
        'cache.stores.memcached.persistent_id' => 'NULL',
        'cache.stores.memcached.sasl' => 'array',
        'cache.stores.memcached.options' => 'array',
        'cache.stores.memcached.servers.0.host' => 'string',
        'cache.stores.memcached.servers.0.port' => 'integer',
        'cache.stores.memcached.servers.0.weight' => 'integer',
        'cache.stores.redis.driver' => 'string',
        'cache.stores.redis.connection' => 'string',
        'cache.stores.redis.lock_connection' => 'string',
        'cache.stores.dynamodb.driver' => 'string',
        'cache.stores.dynamodb.key' => 'NULL',
        'cache.stores.dynamodb.secret' => 'NULL',
        'cache.stores.dynamodb.region' => 'string',
        'cache.stores.dynamodb.table' => 'string',
        'cache.stores.dynamodb.endpoint' => 'NULL',
        'cache.stores.octane.driver' => 'string',
        'cache.prefix' => 'string',
        'cors.paths' => 'array',
        'cors.allowed_methods' => 'array',
        'cors.allowed_origins' => 'array',
        'cors.allowed_origins_patterns' => 'array',
        'cors.allowed_headers' => 'array',
        'cors.exposed_headers' => 'array',
        'cors.max_age' => 'integer',
        'cors.supports_credentials' => 'boolean',
        'database.default' => 'string',
        'database.connections.sqlite.driver' => 'string',
        'database.connections.sqlite.url' => 'NULL',
        'database.connections.sqlite.database' => 'string',
        'database.connections.sqlite.prefix' => 'string',
        'database.connections.sqlite.foreign_key_constraints' => 'boolean',
        'database.connections.sqlite.busy_timeout' => 'NULL',
        'database.connections.sqlite.journal_mode' => 'NULL',
        'database.connections.sqlite.synchronous' => 'NULL',
        'database.connections.mysql.driver' => 'string',
        'database.connections.mysql.url' => 'NULL',
        'database.connections.mysql.host' => 'string',
        'database.connections.mysql.port' => 'string',
        'database.connections.mysql.database' => 'string',
        'database.connections.mysql.username' => 'string',
        'database.connections.mysql.password' => 'string',
        'database.connections.mysql.unix_socket' => 'string',
        'database.connections.mysql.charset' => 'string',
        'database.connections.mysql.collation' => 'string',
        'database.connections.mysql.prefix' => 'string',
        'database.connections.mysql.prefix_indexes' => 'boolean',
        'database.connections.mysql.strict' => 'boolean',
        'database.connections.mysql.engine' => 'NULL',
        'database.connections.mysql.options' => 'array',
        'database.connections.mariadb.driver' => 'string',
        'database.connections.mariadb.url' => 'NULL',
        'database.connections.mariadb.host' => 'string',
        'database.connections.mariadb.port' => 'string',
        'database.connections.mariadb.database' => 'string',
        'database.connections.mariadb.username' => 'string',
        'database.connections.mariadb.password' => 'string',
        'database.connections.mariadb.unix_socket' => 'string',
        'database.connections.mariadb.charset' => 'string',
        'database.connections.mariadb.collation' => 'string',
        'database.connections.mariadb.prefix' => 'string',
        'database.connections.mariadb.prefix_indexes' => 'boolean',
        'database.connections.mariadb.strict' => 'boolean',
        'database.connections.mariadb.engine' => 'NULL',
        'database.connections.mariadb.options' => 'array',
        'database.connections.pgsql.driver' => 'string',
        'database.connections.pgsql.url' => 'NULL',
        'database.connections.pgsql.host' => 'string',
        'database.connections.pgsql.port' => 'string',
        'database.connections.pgsql.database' => 'string',
        'database.connections.pgsql.username' => 'string',
        'database.connections.pgsql.password' => 'string',
        'database.connections.pgsql.charset' => 'string',
        'database.connections.pgsql.prefix' => 'string',
        'database.connections.pgsql.prefix_indexes' => 'boolean',
        'database.connections.pgsql.search_path' => 'string',
        'database.connections.pgsql.sslmode' => 'string',
        'database.connections.sqlsrv.driver' => 'string',
        'database.connections.sqlsrv.url' => 'NULL',
        'database.connections.sqlsrv.host' => 'string',
        'database.connections.sqlsrv.port' => 'string',
        'database.connections.sqlsrv.database' => 'string',
        'database.connections.sqlsrv.username' => 'string',
        'database.connections.sqlsrv.password' => 'string',
        'database.connections.sqlsrv.charset' => 'string',
        'database.connections.sqlsrv.prefix' => 'string',
        'database.connections.sqlsrv.prefix_indexes' => 'boolean',
        'database.migrations.table' => 'string',
        'database.migrations.update_date_on_publish' => 'boolean',
        'database.redis.client' => 'string',
        'database.redis.options.cluster' => 'string',
        'database.redis.options.prefix' => 'string',
        'database.redis.default.url' => 'NULL',
        'database.redis.default.host' => 'string',
        'database.redis.default.username' => 'NULL',
        'database.redis.default.password' => 'NULL',
        'database.redis.default.port' => 'string',
        'database.redis.default.database' => 'string',
        'database.redis.cache.url' => 'NULL',
        'database.redis.cache.host' => 'string',
        'database.redis.cache.username' => 'NULL',
        'database.redis.cache.password' => 'NULL',
        'database.redis.cache.port' => 'string',
        'database.redis.cache.database' => 'string',
        'database.redis.session.url' => 'NULL',
        'database.redis.session.host' => 'string',
        'database.redis.session.username' => 'NULL',
        'database.redis.session.password' => 'NULL',
        'database.redis.session.port' => 'string',
        'database.redis.session.database' => 'string',
        'debugbar.enabled' => 'NULL',
        'debugbar.hide_empty_tabs' => 'boolean',
        'debugbar.except' => 'array',
        'debugbar.storage.enabled' => 'boolean',
        'debugbar.storage.open' => 'NULL',
        'debugbar.storage.driver' => 'string',
        'debugbar.storage.path' => 'string',
        'debugbar.storage.connection' => 'NULL',
        'debugbar.storage.provider' => 'string',
        'debugbar.storage.hostname' => 'string',
        'debugbar.storage.port' => 'integer',
        'debugbar.editor' => 'string',
        'debugbar.remote_sites_path' => 'NULL',
        'debugbar.local_sites_path' => 'string',
        'debugbar.include_vendors' => 'boolean',
        'debugbar.capture_ajax' => 'boolean',
        'debugbar.add_ajax_timing' => 'boolean',
        'debugbar.ajax_handler_auto_show' => 'boolean',
        'debugbar.ajax_handler_enable_tab' => 'boolean',
        'debugbar.defer_datasets' => 'boolean',
        'debugbar.error_handler' => 'boolean',
        'debugbar.clockwork' => 'boolean',
        'debugbar.collectors.phpinfo' => 'boolean',
        'debugbar.collectors.messages' => 'boolean',
        'debugbar.collectors.time' => 'boolean',
        'debugbar.collectors.memory' => 'boolean',
        'debugbar.collectors.exceptions' => 'boolean',
        'debugbar.collectors.log' => 'boolean',
        'debugbar.collectors.db' => 'boolean',
        'debugbar.collectors.views' => 'boolean',
        'debugbar.collectors.route' => 'boolean',
        'debugbar.collectors.auth' => 'boolean',
        'debugbar.collectors.gate' => 'boolean',
        'debugbar.collectors.session' => 'boolean',
        'debugbar.collectors.symfony_request' => 'boolean',
        'debugbar.collectors.mail' => 'boolean',
        'debugbar.collectors.laravel' => 'boolean',
        'debugbar.collectors.events' => 'boolean',
        'debugbar.collectors.default_request' => 'boolean',
        'debugbar.collectors.logs' => 'boolean',
        'debugbar.collectors.files' => 'boolean',
        'debugbar.collectors.config' => 'boolean',
        'debugbar.collectors.cache' => 'boolean',
        'debugbar.collectors.models' => 'boolean',
        'debugbar.collectors.livewire' => 'boolean',
        'debugbar.collectors.jobs' => 'boolean',
        'debugbar.collectors.pennant' => 'boolean',
        'debugbar.options.time.memory_usage' => 'boolean',
        'debugbar.options.messages.trace' => 'boolean',
        'debugbar.options.memory.reset_peak' => 'boolean',
        'debugbar.options.memory.with_baseline' => 'boolean',
        'debugbar.options.memory.precision' => 'integer',
        'debugbar.options.auth.show_name' => 'boolean',
        'debugbar.options.auth.show_guards' => 'boolean',
        'debugbar.options.db.with_params' => 'boolean',
        'debugbar.options.db.exclude_paths' => 'array',
        'debugbar.options.db.backtrace' => 'boolean',
        'debugbar.options.db.backtrace_exclude_paths' => 'array',
        'debugbar.options.db.timeline' => 'boolean',
        'debugbar.options.db.duration_background' => 'boolean',
        'debugbar.options.db.explain.enabled' => 'boolean',
        'debugbar.options.db.hints' => 'boolean',
        'debugbar.options.db.show_copy' => 'boolean',
        'debugbar.options.db.slow_threshold' => 'boolean',
        'debugbar.options.db.memory_usage' => 'boolean',
        'debugbar.options.db.soft_limit' => 'integer',
        'debugbar.options.db.hard_limit' => 'integer',
        'debugbar.options.mail.timeline' => 'boolean',
        'debugbar.options.mail.show_body' => 'boolean',
        'debugbar.options.views.timeline' => 'boolean',
        'debugbar.options.views.data' => 'boolean',
        'debugbar.options.views.group' => 'integer',
        'debugbar.options.views.exclude_paths' => 'array',
        'debugbar.options.route.label' => 'boolean',
        'debugbar.options.session.hiddens' => 'array',
        'debugbar.options.symfony_request.label' => 'boolean',
        'debugbar.options.symfony_request.hiddens' => 'array',
        'debugbar.options.events.data' => 'boolean',
        'debugbar.options.logs.file' => 'NULL',
        'debugbar.options.cache.values' => 'boolean',
        'debugbar.inject' => 'boolean',
        'debugbar.route_prefix' => 'string',
        'debugbar.route_middleware' => 'array',
        'debugbar.route_domain' => 'NULL',
        'debugbar.theme' => 'string',
        'debugbar.debug_backtrace_limit' => 'integer',
        'envy.environment_files' => 'array',
        'envy.config_files' => 'array',
        'envy.display_comments' => 'boolean',
        'envy.display_location_hints' => 'boolean',
        'envy.display_default_values' => 'boolean',
        'envy.exclude_calls_with_defaults' => 'boolean',
        'envy.exclusions' => 'array',
        'envy.inclusions' => 'array',
        'filesystems.default' => 'string',
        'filesystems.disks.local.driver' => 'string',
        'filesystems.disks.local.root' => 'string',
        'filesystems.disks.local.serve' => 'boolean',
        'filesystems.disks.local.throw' => 'boolean',
        'filesystems.disks.public.driver' => 'string',
        'filesystems.disks.public.root' => 'string',
        'filesystems.disks.public.url' => 'string',
        'filesystems.disks.public.visibility' => 'string',
        'filesystems.disks.public.throw' => 'boolean',
        'filesystems.disks.s3.driver' => 'string',
        'filesystems.disks.s3.key' => 'NULL',
        'filesystems.disks.s3.secret' => 'NULL',
        'filesystems.disks.s3.region' => 'NULL',
        'filesystems.disks.s3.bucket' => 'NULL',
        'filesystems.disks.s3.url' => 'NULL',
        'filesystems.disks.s3.endpoint' => 'NULL',
        'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
        'filesystems.disks.s3.throw' => 'boolean',
        'filesystems.links./var/www/html/public/storage' => 'string',
        'fortify.guard' => 'string',
        'fortify.middleware' => 'array',
        'fortify.auth_middleware' => 'string',
        'fortify.passwords' => 'string',
        'fortify.username' => 'string',
        'fortify.email' => 'string',
        'fortify.views' => 'boolean',
        'fortify.home' => 'string',
        'fortify.prefix' => 'string',
        'fortify.domain' => 'NULL',
        'fortify.lowercase_usernames' => 'boolean',
        'fortify.limiters.login' => 'string',
        'fortify.limiters.two-factor' => 'string',
        'fortify.paths.login' => 'NULL',
        'fortify.paths.logout' => 'NULL',
        'fortify.paths.password.request' => 'NULL',
        'fortify.paths.password.reset' => 'NULL',
        'fortify.paths.password.email' => 'NULL',
        'fortify.paths.password.update' => 'NULL',
        'fortify.paths.password.confirm' => 'NULL',
        'fortify.paths.password.confirmation' => 'NULL',
        'fortify.paths.register' => 'NULL',
        'fortify.paths.verification.notice' => 'NULL',
        'fortify.paths.verification.verify' => 'NULL',
        'fortify.paths.verification.send' => 'NULL',
        'fortify.paths.user-profile-information.update' => 'NULL',
        'fortify.paths.user-password.update' => 'NULL',
        'fortify.paths.two-factor.login' => 'NULL',
        'fortify.paths.two-factor.enable' => 'NULL',
        'fortify.paths.two-factor.confirm' => 'NULL',
        'fortify.paths.two-factor.disable' => 'NULL',
        'fortify.paths.two-factor.qr-code' => 'NULL',
        'fortify.paths.two-factor.secret-key' => 'NULL',
        'fortify.paths.two-factor.recovery-codes' => 'NULL',
        'fortify.redirects.login' => 'NULL',
        'fortify.redirects.logout' => 'NULL',
        'fortify.redirects.password-confirmation' => 'NULL',
        'fortify.redirects.register' => 'NULL',
        'fortify.redirects.email-verification' => 'NULL',
        'fortify.redirects.password-reset' => 'NULL',
        'fortify.features' => 'array',
        'gravatar.default.size' => 'integer',
        'gravatar.default.fallback' => 'string',
        'gravatar.default.secure' => 'boolean',
        'gravatar.default.maximumRating' => 'string',
        'gravatar.default.forceDefault' => 'boolean',
        'gravatar.default.forceExtension' => 'string',
        'logging.default' => 'string',
        'logging.deprecations.channel' => 'NULL',
        'logging.deprecations.trace' => 'boolean',
        'logging.channels.stack.driver' => 'string',
        'logging.channels.stack.channels' => 'array',
        'logging.channels.stack.ignore_exceptions' => 'boolean',
        'logging.channels.single.driver' => 'string',
        'logging.channels.single.path' => 'string',
        'logging.channels.single.level' => 'string',
        'logging.channels.single.replace_placeholders' => 'boolean',
        'logging.channels.daily.driver' => 'string',
        'logging.channels.daily.path' => 'string',
        'logging.channels.daily.level' => 'string',
        'logging.channels.daily.days' => 'integer',
        'logging.channels.daily.replace_placeholders' => 'boolean',
        'logging.channels.slack.driver' => 'string',
        'logging.channels.slack.url' => 'NULL',
        'logging.channels.slack.username' => 'string',
        'logging.channels.slack.emoji' => 'string',
        'logging.channels.slack.level' => 'string',
        'logging.channels.slack.replace_placeholders' => 'boolean',
        'logging.channels.papertrail.driver' => 'string',
        'logging.channels.papertrail.level' => 'string',
        'logging.channels.papertrail.handler' => 'string',
        'logging.channels.papertrail.handler_with.host' => 'NULL',
        'logging.channels.papertrail.handler_with.port' => 'NULL',
        'logging.channels.papertrail.handler_with.connectionString' => 'string',
        'logging.channels.papertrail.processors' => 'array',
        'logging.channels.stderr.driver' => 'string',
        'logging.channels.stderr.level' => 'string',
        'logging.channels.stderr.handler' => 'string',
        'logging.channels.stderr.formatter' => 'NULL',
        'logging.channels.stderr.with.stream' => 'string',
        'logging.channels.stderr.processors' => 'array',
        'logging.channels.syslog.driver' => 'string',
        'logging.channels.syslog.level' => 'string',
        'logging.channels.syslog.facility' => 'integer',
        'logging.channels.syslog.replace_placeholders' => 'boolean',
        'logging.channels.errorlog.driver' => 'string',
        'logging.channels.errorlog.level' => 'string',
        'logging.channels.errorlog.replace_placeholders' => 'boolean',
        'logging.channels.null.driver' => 'string',
        'logging.channels.null.handler' => 'string',
        'logging.channels.emergency.path' => 'string',
        'logging.channels.deprecations.driver' => 'string',
        'logging.channels.deprecations.handler' => 'string',
        'mail.default' => 'string',
        'mail.mailers.smtp.transport' => 'string',
        'mail.mailers.smtp.scheme' => 'NULL',
        'mail.mailers.smtp.url' => 'NULL',
        'mail.mailers.smtp.host' => 'string',
        'mail.mailers.smtp.port' => 'string',
        'mail.mailers.smtp.username' => 'NULL',
        'mail.mailers.smtp.password' => 'NULL',
        'mail.mailers.smtp.timeout' => 'NULL',
        'mail.mailers.smtp.local_domain' => 'string',
        'mail.mailers.ses.transport' => 'string',
        'mail.mailers.postmark.transport' => 'string',
        'mail.mailers.resend.transport' => 'string',
        'mail.mailers.sendmail.transport' => 'string',
        'mail.mailers.sendmail.path' => 'string',
        'mail.mailers.log.transport' => 'string',
        'mail.mailers.log.channel' => 'NULL',
        'mail.mailers.array.transport' => 'string',
        'mail.mailers.failover.transport' => 'string',
        'mail.mailers.failover.mailers' => 'array',
        'mail.mailers.roundrobin.transport' => 'string',
        'mail.mailers.roundrobin.mailers' => 'array',
        'mail.from.address' => 'string',
        'mail.from.name' => 'string',
        'mail.markdown.theme' => 'string',
        'mail.markdown.paths' => 'array',
        'permission.models.permission' => 'string',
        'permission.models.role' => 'string',
        'permission.table_names.roles' => 'string',
        'permission.table_names.permissions' => 'string',
        'permission.table_names.model_has_permissions' => 'string',
        'permission.table_names.model_has_roles' => 'string',
        'permission.table_names.role_has_permissions' => 'string',
        'permission.column_names.role_pivot_key' => 'NULL',
        'permission.column_names.permission_pivot_key' => 'NULL',
        'permission.column_names.model_morph_key' => 'string',
        'permission.column_names.team_foreign_key' => 'string',
        'permission.register_permission_check_method' => 'boolean',
        'permission.register_octane_reset_listener' => 'boolean',
        'permission.events_enabled' => 'boolean',
        'permission.teams' => 'boolean',
        'permission.team_resolver' => 'string',
        'permission.use_passport_client_credentials' => 'boolean',
        'permission.display_permission_in_exception' => 'boolean',
        'permission.display_role_in_exception' => 'boolean',
        'permission.enable_wildcard_permission' => 'boolean',
        'permission.cache.expiration_time' => 'object',
        'permission.cache.key' => 'string',
        'permission.cache.store' => 'string',
        'queue.default' => 'string',
        'queue.connections.sync.driver' => 'string',
        'queue.connections.database.driver' => 'string',
        'queue.connections.database.connection' => 'NULL',
        'queue.connections.database.table' => 'string',
        'queue.connections.database.queue' => 'string',
        'queue.connections.database.retry_after' => 'integer',
        'queue.connections.database.after_commit' => 'boolean',
        'queue.connections.beanstalkd.driver' => 'string',
        'queue.connections.beanstalkd.host' => 'string',
        'queue.connections.beanstalkd.queue' => 'string',
        'queue.connections.beanstalkd.retry_after' => 'integer',
        'queue.connections.beanstalkd.block_for' => 'integer',
        'queue.connections.beanstalkd.after_commit' => 'boolean',
        'queue.connections.sqs.driver' => 'string',
        'queue.connections.sqs.key' => 'NULL',
        'queue.connections.sqs.secret' => 'NULL',
        'queue.connections.sqs.prefix' => 'string',
        'queue.connections.sqs.queue' => 'string',
        'queue.connections.sqs.suffix' => 'NULL',
        'queue.connections.sqs.region' => 'string',
        'queue.connections.sqs.after_commit' => 'boolean',
        'queue.connections.redis.driver' => 'string',
        'queue.connections.redis.connection' => 'string',
        'queue.connections.redis.queue' => 'string',
        'queue.connections.redis.retry_after' => 'integer',
        'queue.connections.redis.block_for' => 'NULL',
        'queue.connections.redis.after_commit' => 'boolean',
        'queue.batching.database' => 'string',
        'queue.batching.table' => 'string',
        'queue.failed.driver' => 'string',
        'queue.failed.database' => 'string',
        'queue.failed.table' => 'string',
        'sanctum.stateful' => 'array',
        'sanctum.guard' => 'array',
        'sanctum.expiration' => 'NULL',
        'sanctum.token_prefix' => 'string',
        'sanctum.middleware.authenticate_session' => 'string',
        'sanctum.middleware.encrypt_cookies' => 'string',
        'sanctum.middleware.validate_csrf_token' => 'string',
        'services.postmark.token' => 'NULL',
        'services.ses.key' => 'NULL',
        'services.ses.secret' => 'NULL',
        'services.ses.region' => 'string',
        'services.resend.key' => 'NULL',
        'services.slack.notifications.bot_user_oauth_token' => 'NULL',
        'services.slack.notifications.channel' => 'NULL',
        'session.driver' => 'string',
        'session.lifetime' => 'string',
        'session.expire_on_close' => 'boolean',
        'session.encrypt' => 'boolean',
        'session.files' => 'string',
        'session.connection' => 'string',
        'session.table' => 'string',
        'session.store' => 'NULL',
        'session.lottery' => 'array',
        'session.cookie' => 'string',
        'session.path' => 'string',
        'session.domain' => 'NULL',
        'session.secure' => 'NULL',
        'session.http_only' => 'boolean',
        'session.same_site' => 'string',
        'session.partitioned' => 'boolean',
        'solo.theme' => 'string',
        'solo.themes.light' => 'string',
        'solo.themes.dark' => 'string',
        'solo.keybinding' => 'string',
        'solo.keybindings.default' => 'string',
        'solo.keybindings.vim' => 'string',
        'solo.commands.Sail' => 'string',
        'solo.commands.Logs' => 'object',
        'solo.commands.Dumps' => 'string',
        'solo.commands.Pest' => 'object',
        'solo.commands.Vite' => 'string',
        'solo.commands.Pint' => 'object',
        'solo.commands.Queue' => 'object',
        'solo.commands.Typescript' => 'object',
        'solo.dump_server_host' => 'string',
        'typescript-transformer.auto_discover_types' => 'array',
        'typescript-transformer.collectors' => 'array',
        'typescript-transformer.transformers' => 'array',
        'typescript-transformer.default_type_replacements.DateTime' => 'string',
        'typescript-transformer.default_type_replacements.DateTimeImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonInterface' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\Carbon' => 'string',
        'typescript-transformer.default_type_replacements.Illuminate\Support\Carbon' => 'string',
        'typescript-transformer.output_file' => 'string',
        'typescript-transformer.writer' => 'string',
        'typescript-transformer.formatter' => 'string',
        'typescript-transformer.transform_to_native_enums' => 'boolean',
        'typescript-transformer.transform_null_to_optional' => 'boolean',
        'hashing.driver' => 'string',
        'hashing.bcrypt.rounds' => 'string',
        'hashing.bcrypt.verify' => 'boolean',
        'hashing.bcrypt.limit' => 'NULL',
        'hashing.argon.memory' => 'integer',
        'hashing.argon.threads' => 'integer',
        'hashing.argon.time' => 'integer',
        'hashing.argon.verify' => 'boolean',
        'hashing.rehash_on_login' => 'boolean',
        'concurrency.default' => 'string',
        'broadcasting.default' => 'string',
        'broadcasting.connections.reverb.driver' => 'string',
        'broadcasting.connections.reverb.key' => 'NULL',
        'broadcasting.connections.reverb.secret' => 'NULL',
        'broadcasting.connections.reverb.app_id' => 'NULL',
        'broadcasting.connections.reverb.options.host' => 'NULL',
        'broadcasting.connections.reverb.options.port' => 'integer',
        'broadcasting.connections.reverb.options.scheme' => 'string',
        'broadcasting.connections.reverb.options.useTLS' => 'boolean',
        'broadcasting.connections.reverb.client_options' => 'array',
        'broadcasting.connections.pusher.driver' => 'string',
        'broadcasting.connections.pusher.key' => 'NULL',
        'broadcasting.connections.pusher.secret' => 'NULL',
        'broadcasting.connections.pusher.app_id' => 'NULL',
        'broadcasting.connections.pusher.options.cluster' => 'NULL',
        'broadcasting.connections.pusher.options.host' => 'string',
        'broadcasting.connections.pusher.options.port' => 'integer',
        'broadcasting.connections.pusher.options.scheme' => 'string',
        'broadcasting.connections.pusher.options.encrypted' => 'boolean',
        'broadcasting.connections.pusher.options.useTLS' => 'boolean',
        'broadcasting.connections.pusher.client_options' => 'array',
        'broadcasting.connections.ably.driver' => 'string',
        'broadcasting.connections.ably.key' => 'NULL',
        'broadcasting.connections.log.driver' => 'string',
        'broadcasting.connections.null.driver' => 'string',
        'view.paths' => 'array',
        'view.compiled' => 'string',
        'inertia.ssr.enabled' => 'boolean',
        'inertia.ssr.url' => 'string',
        'inertia.testing.ensure_pages_exist' => 'boolean',
        'inertia.testing.page_paths' => 'array',
        'inertia.testing.page_extensions' => 'array',
        'inertia.history.encrypt' => 'boolean',
        'flare.key' => 'NULL',
        'flare.flare_middleware' => 'array',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddLogs.maximum_number_of_collected_logs' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.maximum_number_of_collected_queries' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.report_query_bindings' => 'boolean',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddJobs.max_chained_job_reporting_depth' => 'integer',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestBodyFields.censor_fields' => 'array',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestHeaders.headers' => 'array',
        'flare.send_logs_as_events' => 'boolean',
        'ignition.editor' => 'string',
        'ignition.theme' => 'string',
        'ignition.enable_share_button' => 'boolean',
        'ignition.register_commands' => 'boolean',
        'ignition.solution_providers' => 'array',
        'ignition.ignored_solution_providers' => 'array',
        'ignition.enable_runnable_solutions' => 'NULL',
        'ignition.remote_sites_path' => 'string',
        'ignition.local_sites_path' => 'string',
        'ignition.housekeeping_endpoint_prefix' => 'string',
        'ignition.settings_file_path' => 'string',
        'ignition.recorders' => 'array',
        'ignition.open_ai_key' => 'NULL',
        'ignition.with_stack_frame_arguments' => 'boolean',
        'ignition.argument_reducers' => 'array',
        'ide-helper.filename' => 'string',
        'ide-helper.models_filename' => 'string',
        'ide-helper.meta_filename' => 'string',
        'ide-helper.include_fluent' => 'boolean',
        'ide-helper.include_factory_builders' => 'boolean',
        'ide-helper.write_model_magic_where' => 'boolean',
        'ide-helper.write_model_external_builder_methods' => 'boolean',
        'ide-helper.write_model_relation_count_properties' => 'boolean',
        'ide-helper.write_eloquent_model_mixins' => 'boolean',
        'ide-helper.include_helpers' => 'boolean',
        'ide-helper.helper_files' => 'array',
        'ide-helper.model_locations' => 'array',
        'ide-helper.ignored_models' => 'array',
        'ide-helper.model_hooks' => 'array',
        'ide-helper.extra.Eloquent' => 'array',
        'ide-helper.extra.Session' => 'array',
        'ide-helper.magic' => 'array',
        'ide-helper.interfaces' => 'array',
        'ide-helper.model_camel_case_properties' => 'boolean',
        'ide-helper.type_overrides.integer' => 'string',
        'ide-helper.type_overrides.boolean' => 'string',
        'ide-helper.include_class_docblocks' => 'boolean',
        'ide-helper.force_fqn' => 'boolean',
        'ide-helper.use_generics_annotations' => 'boolean',
        'ide-helper.additional_relation_types' => 'array',
        'ide-helper.additional_relation_return_types' => 'array',
        'ide-helper.enforce_nullable_relationships' => 'boolean',
        'ide-helper.post_migrate' => 'array',
        'ide-helper.macroable_traits' => 'array',
        'tinker.commands' => 'array',
        'tinker.alias' => 'array',
        'tinker.dont_alias' => 'array',
    ]));
    override(Repository::get(), map([
        'app.name' => 'string',
        'app.env' => 'string',
        'app.debug' => 'boolean',
        'app.url' => 'string',
        'app.frontend_url' => 'string',
        'app.asset_url' => 'NULL',
        'app.timezone' => 'string',
        'app.locale' => 'string',
        'app.fallback_locale' => 'string',
        'app.faker_locale' => 'string',
        'app.cipher' => 'string',
        'app.key' => 'string',
        'app.previous_keys' => 'array',
        'app.maintenance.driver' => 'string',
        'app.maintenance.store' => 'string',
        'app.providers' => 'array',
        'app.aliases.App' => 'string',
        'app.aliases.Arr' => 'string',
        'app.aliases.Artisan' => 'string',
        'app.aliases.Auth' => 'string',
        'app.aliases.Blade' => 'string',
        'app.aliases.Broadcast' => 'string',
        'app.aliases.Bus' => 'string',
        'app.aliases.Cache' => 'string',
        'app.aliases.Concurrency' => 'string',
        'app.aliases.Config' => 'string',
        'app.aliases.Context' => 'string',
        'app.aliases.Cookie' => 'string',
        'app.aliases.Crypt' => 'string',
        'app.aliases.Date' => 'string',
        'app.aliases.DB' => 'string',
        'app.aliases.Eloquent' => 'string',
        'app.aliases.Event' => 'string',
        'app.aliases.File' => 'string',
        'app.aliases.Gate' => 'string',
        'app.aliases.Hash' => 'string',
        'app.aliases.Http' => 'string',
        'app.aliases.Js' => 'string',
        'app.aliases.Lang' => 'string',
        'app.aliases.Log' => 'string',
        'app.aliases.Mail' => 'string',
        'app.aliases.Notification' => 'string',
        'app.aliases.Number' => 'string',
        'app.aliases.Password' => 'string',
        'app.aliases.Process' => 'string',
        'app.aliases.Queue' => 'string',
        'app.aliases.RateLimiter' => 'string',
        'app.aliases.Redirect' => 'string',
        'app.aliases.Request' => 'string',
        'app.aliases.Response' => 'string',
        'app.aliases.Route' => 'string',
        'app.aliases.Schedule' => 'string',
        'app.aliases.Schema' => 'string',
        'app.aliases.Session' => 'string',
        'app.aliases.Storage' => 'string',
        'app.aliases.Str' => 'string',
        'app.aliases.URL' => 'string',
        'app.aliases.Uri' => 'string',
        'app.aliases.Validator' => 'string',
        'app.aliases.View' => 'string',
        'app.aliases.Vite' => 'string',
        'auth.defaults.guard' => 'string',
        'auth.defaults.passwords' => 'string',
        'auth.guards.web.driver' => 'string',
        'auth.guards.web.provider' => 'string',
        'auth.guards.sanctum.driver' => 'string',
        'auth.guards.sanctum.provider' => 'NULL',
        'auth.providers.users.driver' => 'string',
        'auth.providers.users.model' => 'string',
        'auth.passwords.users.provider' => 'string',
        'auth.passwords.users.table' => 'string',
        'auth.passwords.users.expire' => 'integer',
        'auth.passwords.users.throttle' => 'integer',
        'auth.password_timeout' => 'integer',
        'beacon.teams.invitation_expiration' => 'object',
        'cache.default' => 'string',
        'cache.stores.array.driver' => 'string',
        'cache.stores.array.serialize' => 'boolean',
        'cache.stores.database.driver' => 'string',
        'cache.stores.database.connection' => 'NULL',
        'cache.stores.database.table' => 'string',
        'cache.stores.database.lock_connection' => 'NULL',
        'cache.stores.database.lock_table' => 'NULL',
        'cache.stores.file.driver' => 'string',
        'cache.stores.file.path' => 'string',
        'cache.stores.file.lock_path' => 'string',
        'cache.stores.memcached.driver' => 'string',
        'cache.stores.memcached.persistent_id' => 'NULL',
        'cache.stores.memcached.sasl' => 'array',
        'cache.stores.memcached.options' => 'array',
        'cache.stores.memcached.servers.0.host' => 'string',
        'cache.stores.memcached.servers.0.port' => 'integer',
        'cache.stores.memcached.servers.0.weight' => 'integer',
        'cache.stores.redis.driver' => 'string',
        'cache.stores.redis.connection' => 'string',
        'cache.stores.redis.lock_connection' => 'string',
        'cache.stores.dynamodb.driver' => 'string',
        'cache.stores.dynamodb.key' => 'NULL',
        'cache.stores.dynamodb.secret' => 'NULL',
        'cache.stores.dynamodb.region' => 'string',
        'cache.stores.dynamodb.table' => 'string',
        'cache.stores.dynamodb.endpoint' => 'NULL',
        'cache.stores.octane.driver' => 'string',
        'cache.prefix' => 'string',
        'cors.paths' => 'array',
        'cors.allowed_methods' => 'array',
        'cors.allowed_origins' => 'array',
        'cors.allowed_origins_patterns' => 'array',
        'cors.allowed_headers' => 'array',
        'cors.exposed_headers' => 'array',
        'cors.max_age' => 'integer',
        'cors.supports_credentials' => 'boolean',
        'database.default' => 'string',
        'database.connections.sqlite.driver' => 'string',
        'database.connections.sqlite.url' => 'NULL',
        'database.connections.sqlite.database' => 'string',
        'database.connections.sqlite.prefix' => 'string',
        'database.connections.sqlite.foreign_key_constraints' => 'boolean',
        'database.connections.sqlite.busy_timeout' => 'NULL',
        'database.connections.sqlite.journal_mode' => 'NULL',
        'database.connections.sqlite.synchronous' => 'NULL',
        'database.connections.mysql.driver' => 'string',
        'database.connections.mysql.url' => 'NULL',
        'database.connections.mysql.host' => 'string',
        'database.connections.mysql.port' => 'string',
        'database.connections.mysql.database' => 'string',
        'database.connections.mysql.username' => 'string',
        'database.connections.mysql.password' => 'string',
        'database.connections.mysql.unix_socket' => 'string',
        'database.connections.mysql.charset' => 'string',
        'database.connections.mysql.collation' => 'string',
        'database.connections.mysql.prefix' => 'string',
        'database.connections.mysql.prefix_indexes' => 'boolean',
        'database.connections.mysql.strict' => 'boolean',
        'database.connections.mysql.engine' => 'NULL',
        'database.connections.mysql.options' => 'array',
        'database.connections.mariadb.driver' => 'string',
        'database.connections.mariadb.url' => 'NULL',
        'database.connections.mariadb.host' => 'string',
        'database.connections.mariadb.port' => 'string',
        'database.connections.mariadb.database' => 'string',
        'database.connections.mariadb.username' => 'string',
        'database.connections.mariadb.password' => 'string',
        'database.connections.mariadb.unix_socket' => 'string',
        'database.connections.mariadb.charset' => 'string',
        'database.connections.mariadb.collation' => 'string',
        'database.connections.mariadb.prefix' => 'string',
        'database.connections.mariadb.prefix_indexes' => 'boolean',
        'database.connections.mariadb.strict' => 'boolean',
        'database.connections.mariadb.engine' => 'NULL',
        'database.connections.mariadb.options' => 'array',
        'database.connections.pgsql.driver' => 'string',
        'database.connections.pgsql.url' => 'NULL',
        'database.connections.pgsql.host' => 'string',
        'database.connections.pgsql.port' => 'string',
        'database.connections.pgsql.database' => 'string',
        'database.connections.pgsql.username' => 'string',
        'database.connections.pgsql.password' => 'string',
        'database.connections.pgsql.charset' => 'string',
        'database.connections.pgsql.prefix' => 'string',
        'database.connections.pgsql.prefix_indexes' => 'boolean',
        'database.connections.pgsql.search_path' => 'string',
        'database.connections.pgsql.sslmode' => 'string',
        'database.connections.sqlsrv.driver' => 'string',
        'database.connections.sqlsrv.url' => 'NULL',
        'database.connections.sqlsrv.host' => 'string',
        'database.connections.sqlsrv.port' => 'string',
        'database.connections.sqlsrv.database' => 'string',
        'database.connections.sqlsrv.username' => 'string',
        'database.connections.sqlsrv.password' => 'string',
        'database.connections.sqlsrv.charset' => 'string',
        'database.connections.sqlsrv.prefix' => 'string',
        'database.connections.sqlsrv.prefix_indexes' => 'boolean',
        'database.migrations.table' => 'string',
        'database.migrations.update_date_on_publish' => 'boolean',
        'database.redis.client' => 'string',
        'database.redis.options.cluster' => 'string',
        'database.redis.options.prefix' => 'string',
        'database.redis.default.url' => 'NULL',
        'database.redis.default.host' => 'string',
        'database.redis.default.username' => 'NULL',
        'database.redis.default.password' => 'NULL',
        'database.redis.default.port' => 'string',
        'database.redis.default.database' => 'string',
        'database.redis.cache.url' => 'NULL',
        'database.redis.cache.host' => 'string',
        'database.redis.cache.username' => 'NULL',
        'database.redis.cache.password' => 'NULL',
        'database.redis.cache.port' => 'string',
        'database.redis.cache.database' => 'string',
        'database.redis.session.url' => 'NULL',
        'database.redis.session.host' => 'string',
        'database.redis.session.username' => 'NULL',
        'database.redis.session.password' => 'NULL',
        'database.redis.session.port' => 'string',
        'database.redis.session.database' => 'string',
        'debugbar.enabled' => 'NULL',
        'debugbar.hide_empty_tabs' => 'boolean',
        'debugbar.except' => 'array',
        'debugbar.storage.enabled' => 'boolean',
        'debugbar.storage.open' => 'NULL',
        'debugbar.storage.driver' => 'string',
        'debugbar.storage.path' => 'string',
        'debugbar.storage.connection' => 'NULL',
        'debugbar.storage.provider' => 'string',
        'debugbar.storage.hostname' => 'string',
        'debugbar.storage.port' => 'integer',
        'debugbar.editor' => 'string',
        'debugbar.remote_sites_path' => 'NULL',
        'debugbar.local_sites_path' => 'string',
        'debugbar.include_vendors' => 'boolean',
        'debugbar.capture_ajax' => 'boolean',
        'debugbar.add_ajax_timing' => 'boolean',
        'debugbar.ajax_handler_auto_show' => 'boolean',
        'debugbar.ajax_handler_enable_tab' => 'boolean',
        'debugbar.defer_datasets' => 'boolean',
        'debugbar.error_handler' => 'boolean',
        'debugbar.clockwork' => 'boolean',
        'debugbar.collectors.phpinfo' => 'boolean',
        'debugbar.collectors.messages' => 'boolean',
        'debugbar.collectors.time' => 'boolean',
        'debugbar.collectors.memory' => 'boolean',
        'debugbar.collectors.exceptions' => 'boolean',
        'debugbar.collectors.log' => 'boolean',
        'debugbar.collectors.db' => 'boolean',
        'debugbar.collectors.views' => 'boolean',
        'debugbar.collectors.route' => 'boolean',
        'debugbar.collectors.auth' => 'boolean',
        'debugbar.collectors.gate' => 'boolean',
        'debugbar.collectors.session' => 'boolean',
        'debugbar.collectors.symfony_request' => 'boolean',
        'debugbar.collectors.mail' => 'boolean',
        'debugbar.collectors.laravel' => 'boolean',
        'debugbar.collectors.events' => 'boolean',
        'debugbar.collectors.default_request' => 'boolean',
        'debugbar.collectors.logs' => 'boolean',
        'debugbar.collectors.files' => 'boolean',
        'debugbar.collectors.config' => 'boolean',
        'debugbar.collectors.cache' => 'boolean',
        'debugbar.collectors.models' => 'boolean',
        'debugbar.collectors.livewire' => 'boolean',
        'debugbar.collectors.jobs' => 'boolean',
        'debugbar.collectors.pennant' => 'boolean',
        'debugbar.options.time.memory_usage' => 'boolean',
        'debugbar.options.messages.trace' => 'boolean',
        'debugbar.options.memory.reset_peak' => 'boolean',
        'debugbar.options.memory.with_baseline' => 'boolean',
        'debugbar.options.memory.precision' => 'integer',
        'debugbar.options.auth.show_name' => 'boolean',
        'debugbar.options.auth.show_guards' => 'boolean',
        'debugbar.options.db.with_params' => 'boolean',
        'debugbar.options.db.exclude_paths' => 'array',
        'debugbar.options.db.backtrace' => 'boolean',
        'debugbar.options.db.backtrace_exclude_paths' => 'array',
        'debugbar.options.db.timeline' => 'boolean',
        'debugbar.options.db.duration_background' => 'boolean',
        'debugbar.options.db.explain.enabled' => 'boolean',
        'debugbar.options.db.hints' => 'boolean',
        'debugbar.options.db.show_copy' => 'boolean',
        'debugbar.options.db.slow_threshold' => 'boolean',
        'debugbar.options.db.memory_usage' => 'boolean',
        'debugbar.options.db.soft_limit' => 'integer',
        'debugbar.options.db.hard_limit' => 'integer',
        'debugbar.options.mail.timeline' => 'boolean',
        'debugbar.options.mail.show_body' => 'boolean',
        'debugbar.options.views.timeline' => 'boolean',
        'debugbar.options.views.data' => 'boolean',
        'debugbar.options.views.group' => 'integer',
        'debugbar.options.views.exclude_paths' => 'array',
        'debugbar.options.route.label' => 'boolean',
        'debugbar.options.session.hiddens' => 'array',
        'debugbar.options.symfony_request.label' => 'boolean',
        'debugbar.options.symfony_request.hiddens' => 'array',
        'debugbar.options.events.data' => 'boolean',
        'debugbar.options.logs.file' => 'NULL',
        'debugbar.options.cache.values' => 'boolean',
        'debugbar.inject' => 'boolean',
        'debugbar.route_prefix' => 'string',
        'debugbar.route_middleware' => 'array',
        'debugbar.route_domain' => 'NULL',
        'debugbar.theme' => 'string',
        'debugbar.debug_backtrace_limit' => 'integer',
        'envy.environment_files' => 'array',
        'envy.config_files' => 'array',
        'envy.display_comments' => 'boolean',
        'envy.display_location_hints' => 'boolean',
        'envy.display_default_values' => 'boolean',
        'envy.exclude_calls_with_defaults' => 'boolean',
        'envy.exclusions' => 'array',
        'envy.inclusions' => 'array',
        'filesystems.default' => 'string',
        'filesystems.disks.local.driver' => 'string',
        'filesystems.disks.local.root' => 'string',
        'filesystems.disks.local.serve' => 'boolean',
        'filesystems.disks.local.throw' => 'boolean',
        'filesystems.disks.public.driver' => 'string',
        'filesystems.disks.public.root' => 'string',
        'filesystems.disks.public.url' => 'string',
        'filesystems.disks.public.visibility' => 'string',
        'filesystems.disks.public.throw' => 'boolean',
        'filesystems.disks.s3.driver' => 'string',
        'filesystems.disks.s3.key' => 'NULL',
        'filesystems.disks.s3.secret' => 'NULL',
        'filesystems.disks.s3.region' => 'NULL',
        'filesystems.disks.s3.bucket' => 'NULL',
        'filesystems.disks.s3.url' => 'NULL',
        'filesystems.disks.s3.endpoint' => 'NULL',
        'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
        'filesystems.disks.s3.throw' => 'boolean',
        'filesystems.links./var/www/html/public/storage' => 'string',
        'fortify.guard' => 'string',
        'fortify.middleware' => 'array',
        'fortify.auth_middleware' => 'string',
        'fortify.passwords' => 'string',
        'fortify.username' => 'string',
        'fortify.email' => 'string',
        'fortify.views' => 'boolean',
        'fortify.home' => 'string',
        'fortify.prefix' => 'string',
        'fortify.domain' => 'NULL',
        'fortify.lowercase_usernames' => 'boolean',
        'fortify.limiters.login' => 'string',
        'fortify.limiters.two-factor' => 'string',
        'fortify.paths.login' => 'NULL',
        'fortify.paths.logout' => 'NULL',
        'fortify.paths.password.request' => 'NULL',
        'fortify.paths.password.reset' => 'NULL',
        'fortify.paths.password.email' => 'NULL',
        'fortify.paths.password.update' => 'NULL',
        'fortify.paths.password.confirm' => 'NULL',
        'fortify.paths.password.confirmation' => 'NULL',
        'fortify.paths.register' => 'NULL',
        'fortify.paths.verification.notice' => 'NULL',
        'fortify.paths.verification.verify' => 'NULL',
        'fortify.paths.verification.send' => 'NULL',
        'fortify.paths.user-profile-information.update' => 'NULL',
        'fortify.paths.user-password.update' => 'NULL',
        'fortify.paths.two-factor.login' => 'NULL',
        'fortify.paths.two-factor.enable' => 'NULL',
        'fortify.paths.two-factor.confirm' => 'NULL',
        'fortify.paths.two-factor.disable' => 'NULL',
        'fortify.paths.two-factor.qr-code' => 'NULL',
        'fortify.paths.two-factor.secret-key' => 'NULL',
        'fortify.paths.two-factor.recovery-codes' => 'NULL',
        'fortify.redirects.login' => 'NULL',
        'fortify.redirects.logout' => 'NULL',
        'fortify.redirects.password-confirmation' => 'NULL',
        'fortify.redirects.register' => 'NULL',
        'fortify.redirects.email-verification' => 'NULL',
        'fortify.redirects.password-reset' => 'NULL',
        'fortify.features' => 'array',
        'gravatar.default.size' => 'integer',
        'gravatar.default.fallback' => 'string',
        'gravatar.default.secure' => 'boolean',
        'gravatar.default.maximumRating' => 'string',
        'gravatar.default.forceDefault' => 'boolean',
        'gravatar.default.forceExtension' => 'string',
        'logging.default' => 'string',
        'logging.deprecations.channel' => 'NULL',
        'logging.deprecations.trace' => 'boolean',
        'logging.channels.stack.driver' => 'string',
        'logging.channels.stack.channels' => 'array',
        'logging.channels.stack.ignore_exceptions' => 'boolean',
        'logging.channels.single.driver' => 'string',
        'logging.channels.single.path' => 'string',
        'logging.channels.single.level' => 'string',
        'logging.channels.single.replace_placeholders' => 'boolean',
        'logging.channels.daily.driver' => 'string',
        'logging.channels.daily.path' => 'string',
        'logging.channels.daily.level' => 'string',
        'logging.channels.daily.days' => 'integer',
        'logging.channels.daily.replace_placeholders' => 'boolean',
        'logging.channels.slack.driver' => 'string',
        'logging.channels.slack.url' => 'NULL',
        'logging.channels.slack.username' => 'string',
        'logging.channels.slack.emoji' => 'string',
        'logging.channels.slack.level' => 'string',
        'logging.channels.slack.replace_placeholders' => 'boolean',
        'logging.channels.papertrail.driver' => 'string',
        'logging.channels.papertrail.level' => 'string',
        'logging.channels.papertrail.handler' => 'string',
        'logging.channels.papertrail.handler_with.host' => 'NULL',
        'logging.channels.papertrail.handler_with.port' => 'NULL',
        'logging.channels.papertrail.handler_with.connectionString' => 'string',
        'logging.channels.papertrail.processors' => 'array',
        'logging.channels.stderr.driver' => 'string',
        'logging.channels.stderr.level' => 'string',
        'logging.channels.stderr.handler' => 'string',
        'logging.channels.stderr.formatter' => 'NULL',
        'logging.channels.stderr.with.stream' => 'string',
        'logging.channels.stderr.processors' => 'array',
        'logging.channels.syslog.driver' => 'string',
        'logging.channels.syslog.level' => 'string',
        'logging.channels.syslog.facility' => 'integer',
        'logging.channels.syslog.replace_placeholders' => 'boolean',
        'logging.channels.errorlog.driver' => 'string',
        'logging.channels.errorlog.level' => 'string',
        'logging.channels.errorlog.replace_placeholders' => 'boolean',
        'logging.channels.null.driver' => 'string',
        'logging.channels.null.handler' => 'string',
        'logging.channels.emergency.path' => 'string',
        'logging.channels.deprecations.driver' => 'string',
        'logging.channels.deprecations.handler' => 'string',
        'mail.default' => 'string',
        'mail.mailers.smtp.transport' => 'string',
        'mail.mailers.smtp.scheme' => 'NULL',
        'mail.mailers.smtp.url' => 'NULL',
        'mail.mailers.smtp.host' => 'string',
        'mail.mailers.smtp.port' => 'string',
        'mail.mailers.smtp.username' => 'NULL',
        'mail.mailers.smtp.password' => 'NULL',
        'mail.mailers.smtp.timeout' => 'NULL',
        'mail.mailers.smtp.local_domain' => 'string',
        'mail.mailers.ses.transport' => 'string',
        'mail.mailers.postmark.transport' => 'string',
        'mail.mailers.resend.transport' => 'string',
        'mail.mailers.sendmail.transport' => 'string',
        'mail.mailers.sendmail.path' => 'string',
        'mail.mailers.log.transport' => 'string',
        'mail.mailers.log.channel' => 'NULL',
        'mail.mailers.array.transport' => 'string',
        'mail.mailers.failover.transport' => 'string',
        'mail.mailers.failover.mailers' => 'array',
        'mail.mailers.roundrobin.transport' => 'string',
        'mail.mailers.roundrobin.mailers' => 'array',
        'mail.from.address' => 'string',
        'mail.from.name' => 'string',
        'mail.markdown.theme' => 'string',
        'mail.markdown.paths' => 'array',
        'permission.models.permission' => 'string',
        'permission.models.role' => 'string',
        'permission.table_names.roles' => 'string',
        'permission.table_names.permissions' => 'string',
        'permission.table_names.model_has_permissions' => 'string',
        'permission.table_names.model_has_roles' => 'string',
        'permission.table_names.role_has_permissions' => 'string',
        'permission.column_names.role_pivot_key' => 'NULL',
        'permission.column_names.permission_pivot_key' => 'NULL',
        'permission.column_names.model_morph_key' => 'string',
        'permission.column_names.team_foreign_key' => 'string',
        'permission.register_permission_check_method' => 'boolean',
        'permission.register_octane_reset_listener' => 'boolean',
        'permission.events_enabled' => 'boolean',
        'permission.teams' => 'boolean',
        'permission.team_resolver' => 'string',
        'permission.use_passport_client_credentials' => 'boolean',
        'permission.display_permission_in_exception' => 'boolean',
        'permission.display_role_in_exception' => 'boolean',
        'permission.enable_wildcard_permission' => 'boolean',
        'permission.cache.expiration_time' => 'object',
        'permission.cache.key' => 'string',
        'permission.cache.store' => 'string',
        'queue.default' => 'string',
        'queue.connections.sync.driver' => 'string',
        'queue.connections.database.driver' => 'string',
        'queue.connections.database.connection' => 'NULL',
        'queue.connections.database.table' => 'string',
        'queue.connections.database.queue' => 'string',
        'queue.connections.database.retry_after' => 'integer',
        'queue.connections.database.after_commit' => 'boolean',
        'queue.connections.beanstalkd.driver' => 'string',
        'queue.connections.beanstalkd.host' => 'string',
        'queue.connections.beanstalkd.queue' => 'string',
        'queue.connections.beanstalkd.retry_after' => 'integer',
        'queue.connections.beanstalkd.block_for' => 'integer',
        'queue.connections.beanstalkd.after_commit' => 'boolean',
        'queue.connections.sqs.driver' => 'string',
        'queue.connections.sqs.key' => 'NULL',
        'queue.connections.sqs.secret' => 'NULL',
        'queue.connections.sqs.prefix' => 'string',
        'queue.connections.sqs.queue' => 'string',
        'queue.connections.sqs.suffix' => 'NULL',
        'queue.connections.sqs.region' => 'string',
        'queue.connections.sqs.after_commit' => 'boolean',
        'queue.connections.redis.driver' => 'string',
        'queue.connections.redis.connection' => 'string',
        'queue.connections.redis.queue' => 'string',
        'queue.connections.redis.retry_after' => 'integer',
        'queue.connections.redis.block_for' => 'NULL',
        'queue.connections.redis.after_commit' => 'boolean',
        'queue.batching.database' => 'string',
        'queue.batching.table' => 'string',
        'queue.failed.driver' => 'string',
        'queue.failed.database' => 'string',
        'queue.failed.table' => 'string',
        'sanctum.stateful' => 'array',
        'sanctum.guard' => 'array',
        'sanctum.expiration' => 'NULL',
        'sanctum.token_prefix' => 'string',
        'sanctum.middleware.authenticate_session' => 'string',
        'sanctum.middleware.encrypt_cookies' => 'string',
        'sanctum.middleware.validate_csrf_token' => 'string',
        'services.postmark.token' => 'NULL',
        'services.ses.key' => 'NULL',
        'services.ses.secret' => 'NULL',
        'services.ses.region' => 'string',
        'services.resend.key' => 'NULL',
        'services.slack.notifications.bot_user_oauth_token' => 'NULL',
        'services.slack.notifications.channel' => 'NULL',
        'session.driver' => 'string',
        'session.lifetime' => 'string',
        'session.expire_on_close' => 'boolean',
        'session.encrypt' => 'boolean',
        'session.files' => 'string',
        'session.connection' => 'string',
        'session.table' => 'string',
        'session.store' => 'NULL',
        'session.lottery' => 'array',
        'session.cookie' => 'string',
        'session.path' => 'string',
        'session.domain' => 'NULL',
        'session.secure' => 'NULL',
        'session.http_only' => 'boolean',
        'session.same_site' => 'string',
        'session.partitioned' => 'boolean',
        'solo.theme' => 'string',
        'solo.themes.light' => 'string',
        'solo.themes.dark' => 'string',
        'solo.keybinding' => 'string',
        'solo.keybindings.default' => 'string',
        'solo.keybindings.vim' => 'string',
        'solo.commands.Sail' => 'string',
        'solo.commands.Logs' => 'object',
        'solo.commands.Dumps' => 'string',
        'solo.commands.Pest' => 'object',
        'solo.commands.Vite' => 'string',
        'solo.commands.Pint' => 'object',
        'solo.commands.Queue' => 'object',
        'solo.commands.Typescript' => 'object',
        'solo.dump_server_host' => 'string',
        'typescript-transformer.auto_discover_types' => 'array',
        'typescript-transformer.collectors' => 'array',
        'typescript-transformer.transformers' => 'array',
        'typescript-transformer.default_type_replacements.DateTime' => 'string',
        'typescript-transformer.default_type_replacements.DateTimeImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonInterface' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\Carbon' => 'string',
        'typescript-transformer.default_type_replacements.Illuminate\Support\Carbon' => 'string',
        'typescript-transformer.output_file' => 'string',
        'typescript-transformer.writer' => 'string',
        'typescript-transformer.formatter' => 'string',
        'typescript-transformer.transform_to_native_enums' => 'boolean',
        'typescript-transformer.transform_null_to_optional' => 'boolean',
        'hashing.driver' => 'string',
        'hashing.bcrypt.rounds' => 'string',
        'hashing.bcrypt.verify' => 'boolean',
        'hashing.bcrypt.limit' => 'NULL',
        'hashing.argon.memory' => 'integer',
        'hashing.argon.threads' => 'integer',
        'hashing.argon.time' => 'integer',
        'hashing.argon.verify' => 'boolean',
        'hashing.rehash_on_login' => 'boolean',
        'concurrency.default' => 'string',
        'broadcasting.default' => 'string',
        'broadcasting.connections.reverb.driver' => 'string',
        'broadcasting.connections.reverb.key' => 'NULL',
        'broadcasting.connections.reverb.secret' => 'NULL',
        'broadcasting.connections.reverb.app_id' => 'NULL',
        'broadcasting.connections.reverb.options.host' => 'NULL',
        'broadcasting.connections.reverb.options.port' => 'integer',
        'broadcasting.connections.reverb.options.scheme' => 'string',
        'broadcasting.connections.reverb.options.useTLS' => 'boolean',
        'broadcasting.connections.reverb.client_options' => 'array',
        'broadcasting.connections.pusher.driver' => 'string',
        'broadcasting.connections.pusher.key' => 'NULL',
        'broadcasting.connections.pusher.secret' => 'NULL',
        'broadcasting.connections.pusher.app_id' => 'NULL',
        'broadcasting.connections.pusher.options.cluster' => 'NULL',
        'broadcasting.connections.pusher.options.host' => 'string',
        'broadcasting.connections.pusher.options.port' => 'integer',
        'broadcasting.connections.pusher.options.scheme' => 'string',
        'broadcasting.connections.pusher.options.encrypted' => 'boolean',
        'broadcasting.connections.pusher.options.useTLS' => 'boolean',
        'broadcasting.connections.pusher.client_options' => 'array',
        'broadcasting.connections.ably.driver' => 'string',
        'broadcasting.connections.ably.key' => 'NULL',
        'broadcasting.connections.log.driver' => 'string',
        'broadcasting.connections.null.driver' => 'string',
        'view.paths' => 'array',
        'view.compiled' => 'string',
        'inertia.ssr.enabled' => 'boolean',
        'inertia.ssr.url' => 'string',
        'inertia.testing.ensure_pages_exist' => 'boolean',
        'inertia.testing.page_paths' => 'array',
        'inertia.testing.page_extensions' => 'array',
        'inertia.history.encrypt' => 'boolean',
        'flare.key' => 'NULL',
        'flare.flare_middleware' => 'array',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddLogs.maximum_number_of_collected_logs' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.maximum_number_of_collected_queries' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.report_query_bindings' => 'boolean',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddJobs.max_chained_job_reporting_depth' => 'integer',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestBodyFields.censor_fields' => 'array',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestHeaders.headers' => 'array',
        'flare.send_logs_as_events' => 'boolean',
        'ignition.editor' => 'string',
        'ignition.theme' => 'string',
        'ignition.enable_share_button' => 'boolean',
        'ignition.register_commands' => 'boolean',
        'ignition.solution_providers' => 'array',
        'ignition.ignored_solution_providers' => 'array',
        'ignition.enable_runnable_solutions' => 'NULL',
        'ignition.remote_sites_path' => 'string',
        'ignition.local_sites_path' => 'string',
        'ignition.housekeeping_endpoint_prefix' => 'string',
        'ignition.settings_file_path' => 'string',
        'ignition.recorders' => 'array',
        'ignition.open_ai_key' => 'NULL',
        'ignition.with_stack_frame_arguments' => 'boolean',
        'ignition.argument_reducers' => 'array',
        'ide-helper.filename' => 'string',
        'ide-helper.models_filename' => 'string',
        'ide-helper.meta_filename' => 'string',
        'ide-helper.include_fluent' => 'boolean',
        'ide-helper.include_factory_builders' => 'boolean',
        'ide-helper.write_model_magic_where' => 'boolean',
        'ide-helper.write_model_external_builder_methods' => 'boolean',
        'ide-helper.write_model_relation_count_properties' => 'boolean',
        'ide-helper.write_eloquent_model_mixins' => 'boolean',
        'ide-helper.include_helpers' => 'boolean',
        'ide-helper.helper_files' => 'array',
        'ide-helper.model_locations' => 'array',
        'ide-helper.ignored_models' => 'array',
        'ide-helper.model_hooks' => 'array',
        'ide-helper.extra.Eloquent' => 'array',
        'ide-helper.extra.Session' => 'array',
        'ide-helper.magic' => 'array',
        'ide-helper.interfaces' => 'array',
        'ide-helper.model_camel_case_properties' => 'boolean',
        'ide-helper.type_overrides.integer' => 'string',
        'ide-helper.type_overrides.boolean' => 'string',
        'ide-helper.include_class_docblocks' => 'boolean',
        'ide-helper.force_fqn' => 'boolean',
        'ide-helper.use_generics_annotations' => 'boolean',
        'ide-helper.additional_relation_types' => 'array',
        'ide-helper.additional_relation_return_types' => 'array',
        'ide-helper.enforce_nullable_relationships' => 'boolean',
        'ide-helper.post_migrate' => 'array',
        'ide-helper.macroable_traits' => 'array',
        'tinker.commands' => 'array',
        'tinker.alias' => 'array',
        'tinker.dont_alias' => 'array',
    ]));
    override(Config::get(), map([
        'app.name' => 'string',
        'app.env' => 'string',
        'app.debug' => 'boolean',
        'app.url' => 'string',
        'app.frontend_url' => 'string',
        'app.asset_url' => 'NULL',
        'app.timezone' => 'string',
        'app.locale' => 'string',
        'app.fallback_locale' => 'string',
        'app.faker_locale' => 'string',
        'app.cipher' => 'string',
        'app.key' => 'string',
        'app.previous_keys' => 'array',
        'app.maintenance.driver' => 'string',
        'app.maintenance.store' => 'string',
        'app.providers' => 'array',
        'app.aliases.App' => 'string',
        'app.aliases.Arr' => 'string',
        'app.aliases.Artisan' => 'string',
        'app.aliases.Auth' => 'string',
        'app.aliases.Blade' => 'string',
        'app.aliases.Broadcast' => 'string',
        'app.aliases.Bus' => 'string',
        'app.aliases.Cache' => 'string',
        'app.aliases.Concurrency' => 'string',
        'app.aliases.Config' => 'string',
        'app.aliases.Context' => 'string',
        'app.aliases.Cookie' => 'string',
        'app.aliases.Crypt' => 'string',
        'app.aliases.Date' => 'string',
        'app.aliases.DB' => 'string',
        'app.aliases.Eloquent' => 'string',
        'app.aliases.Event' => 'string',
        'app.aliases.File' => 'string',
        'app.aliases.Gate' => 'string',
        'app.aliases.Hash' => 'string',
        'app.aliases.Http' => 'string',
        'app.aliases.Js' => 'string',
        'app.aliases.Lang' => 'string',
        'app.aliases.Log' => 'string',
        'app.aliases.Mail' => 'string',
        'app.aliases.Notification' => 'string',
        'app.aliases.Number' => 'string',
        'app.aliases.Password' => 'string',
        'app.aliases.Process' => 'string',
        'app.aliases.Queue' => 'string',
        'app.aliases.RateLimiter' => 'string',
        'app.aliases.Redirect' => 'string',
        'app.aliases.Request' => 'string',
        'app.aliases.Response' => 'string',
        'app.aliases.Route' => 'string',
        'app.aliases.Schedule' => 'string',
        'app.aliases.Schema' => 'string',
        'app.aliases.Session' => 'string',
        'app.aliases.Storage' => 'string',
        'app.aliases.Str' => 'string',
        'app.aliases.URL' => 'string',
        'app.aliases.Uri' => 'string',
        'app.aliases.Validator' => 'string',
        'app.aliases.View' => 'string',
        'app.aliases.Vite' => 'string',
        'auth.defaults.guard' => 'string',
        'auth.defaults.passwords' => 'string',
        'auth.guards.web.driver' => 'string',
        'auth.guards.web.provider' => 'string',
        'auth.guards.sanctum.driver' => 'string',
        'auth.guards.sanctum.provider' => 'NULL',
        'auth.providers.users.driver' => 'string',
        'auth.providers.users.model' => 'string',
        'auth.passwords.users.provider' => 'string',
        'auth.passwords.users.table' => 'string',
        'auth.passwords.users.expire' => 'integer',
        'auth.passwords.users.throttle' => 'integer',
        'auth.password_timeout' => 'integer',
        'beacon.teams.invitation_expiration' => 'object',
        'cache.default' => 'string',
        'cache.stores.array.driver' => 'string',
        'cache.stores.array.serialize' => 'boolean',
        'cache.stores.database.driver' => 'string',
        'cache.stores.database.connection' => 'NULL',
        'cache.stores.database.table' => 'string',
        'cache.stores.database.lock_connection' => 'NULL',
        'cache.stores.database.lock_table' => 'NULL',
        'cache.stores.file.driver' => 'string',
        'cache.stores.file.path' => 'string',
        'cache.stores.file.lock_path' => 'string',
        'cache.stores.memcached.driver' => 'string',
        'cache.stores.memcached.persistent_id' => 'NULL',
        'cache.stores.memcached.sasl' => 'array',
        'cache.stores.memcached.options' => 'array',
        'cache.stores.memcached.servers.0.host' => 'string',
        'cache.stores.memcached.servers.0.port' => 'integer',
        'cache.stores.memcached.servers.0.weight' => 'integer',
        'cache.stores.redis.driver' => 'string',
        'cache.stores.redis.connection' => 'string',
        'cache.stores.redis.lock_connection' => 'string',
        'cache.stores.dynamodb.driver' => 'string',
        'cache.stores.dynamodb.key' => 'NULL',
        'cache.stores.dynamodb.secret' => 'NULL',
        'cache.stores.dynamodb.region' => 'string',
        'cache.stores.dynamodb.table' => 'string',
        'cache.stores.dynamodb.endpoint' => 'NULL',
        'cache.stores.octane.driver' => 'string',
        'cache.prefix' => 'string',
        'cors.paths' => 'array',
        'cors.allowed_methods' => 'array',
        'cors.allowed_origins' => 'array',
        'cors.allowed_origins_patterns' => 'array',
        'cors.allowed_headers' => 'array',
        'cors.exposed_headers' => 'array',
        'cors.max_age' => 'integer',
        'cors.supports_credentials' => 'boolean',
        'database.default' => 'string',
        'database.connections.sqlite.driver' => 'string',
        'database.connections.sqlite.url' => 'NULL',
        'database.connections.sqlite.database' => 'string',
        'database.connections.sqlite.prefix' => 'string',
        'database.connections.sqlite.foreign_key_constraints' => 'boolean',
        'database.connections.sqlite.busy_timeout' => 'NULL',
        'database.connections.sqlite.journal_mode' => 'NULL',
        'database.connections.sqlite.synchronous' => 'NULL',
        'database.connections.mysql.driver' => 'string',
        'database.connections.mysql.url' => 'NULL',
        'database.connections.mysql.host' => 'string',
        'database.connections.mysql.port' => 'string',
        'database.connections.mysql.database' => 'string',
        'database.connections.mysql.username' => 'string',
        'database.connections.mysql.password' => 'string',
        'database.connections.mysql.unix_socket' => 'string',
        'database.connections.mysql.charset' => 'string',
        'database.connections.mysql.collation' => 'string',
        'database.connections.mysql.prefix' => 'string',
        'database.connections.mysql.prefix_indexes' => 'boolean',
        'database.connections.mysql.strict' => 'boolean',
        'database.connections.mysql.engine' => 'NULL',
        'database.connections.mysql.options' => 'array',
        'database.connections.mariadb.driver' => 'string',
        'database.connections.mariadb.url' => 'NULL',
        'database.connections.mariadb.host' => 'string',
        'database.connections.mariadb.port' => 'string',
        'database.connections.mariadb.database' => 'string',
        'database.connections.mariadb.username' => 'string',
        'database.connections.mariadb.password' => 'string',
        'database.connections.mariadb.unix_socket' => 'string',
        'database.connections.mariadb.charset' => 'string',
        'database.connections.mariadb.collation' => 'string',
        'database.connections.mariadb.prefix' => 'string',
        'database.connections.mariadb.prefix_indexes' => 'boolean',
        'database.connections.mariadb.strict' => 'boolean',
        'database.connections.mariadb.engine' => 'NULL',
        'database.connections.mariadb.options' => 'array',
        'database.connections.pgsql.driver' => 'string',
        'database.connections.pgsql.url' => 'NULL',
        'database.connections.pgsql.host' => 'string',
        'database.connections.pgsql.port' => 'string',
        'database.connections.pgsql.database' => 'string',
        'database.connections.pgsql.username' => 'string',
        'database.connections.pgsql.password' => 'string',
        'database.connections.pgsql.charset' => 'string',
        'database.connections.pgsql.prefix' => 'string',
        'database.connections.pgsql.prefix_indexes' => 'boolean',
        'database.connections.pgsql.search_path' => 'string',
        'database.connections.pgsql.sslmode' => 'string',
        'database.connections.sqlsrv.driver' => 'string',
        'database.connections.sqlsrv.url' => 'NULL',
        'database.connections.sqlsrv.host' => 'string',
        'database.connections.sqlsrv.port' => 'string',
        'database.connections.sqlsrv.database' => 'string',
        'database.connections.sqlsrv.username' => 'string',
        'database.connections.sqlsrv.password' => 'string',
        'database.connections.sqlsrv.charset' => 'string',
        'database.connections.sqlsrv.prefix' => 'string',
        'database.connections.sqlsrv.prefix_indexes' => 'boolean',
        'database.migrations.table' => 'string',
        'database.migrations.update_date_on_publish' => 'boolean',
        'database.redis.client' => 'string',
        'database.redis.options.cluster' => 'string',
        'database.redis.options.prefix' => 'string',
        'database.redis.default.url' => 'NULL',
        'database.redis.default.host' => 'string',
        'database.redis.default.username' => 'NULL',
        'database.redis.default.password' => 'NULL',
        'database.redis.default.port' => 'string',
        'database.redis.default.database' => 'string',
        'database.redis.cache.url' => 'NULL',
        'database.redis.cache.host' => 'string',
        'database.redis.cache.username' => 'NULL',
        'database.redis.cache.password' => 'NULL',
        'database.redis.cache.port' => 'string',
        'database.redis.cache.database' => 'string',
        'database.redis.session.url' => 'NULL',
        'database.redis.session.host' => 'string',
        'database.redis.session.username' => 'NULL',
        'database.redis.session.password' => 'NULL',
        'database.redis.session.port' => 'string',
        'database.redis.session.database' => 'string',
        'debugbar.enabled' => 'NULL',
        'debugbar.hide_empty_tabs' => 'boolean',
        'debugbar.except' => 'array',
        'debugbar.storage.enabled' => 'boolean',
        'debugbar.storage.open' => 'NULL',
        'debugbar.storage.driver' => 'string',
        'debugbar.storage.path' => 'string',
        'debugbar.storage.connection' => 'NULL',
        'debugbar.storage.provider' => 'string',
        'debugbar.storage.hostname' => 'string',
        'debugbar.storage.port' => 'integer',
        'debugbar.editor' => 'string',
        'debugbar.remote_sites_path' => 'NULL',
        'debugbar.local_sites_path' => 'string',
        'debugbar.include_vendors' => 'boolean',
        'debugbar.capture_ajax' => 'boolean',
        'debugbar.add_ajax_timing' => 'boolean',
        'debugbar.ajax_handler_auto_show' => 'boolean',
        'debugbar.ajax_handler_enable_tab' => 'boolean',
        'debugbar.defer_datasets' => 'boolean',
        'debugbar.error_handler' => 'boolean',
        'debugbar.clockwork' => 'boolean',
        'debugbar.collectors.phpinfo' => 'boolean',
        'debugbar.collectors.messages' => 'boolean',
        'debugbar.collectors.time' => 'boolean',
        'debugbar.collectors.memory' => 'boolean',
        'debugbar.collectors.exceptions' => 'boolean',
        'debugbar.collectors.log' => 'boolean',
        'debugbar.collectors.db' => 'boolean',
        'debugbar.collectors.views' => 'boolean',
        'debugbar.collectors.route' => 'boolean',
        'debugbar.collectors.auth' => 'boolean',
        'debugbar.collectors.gate' => 'boolean',
        'debugbar.collectors.session' => 'boolean',
        'debugbar.collectors.symfony_request' => 'boolean',
        'debugbar.collectors.mail' => 'boolean',
        'debugbar.collectors.laravel' => 'boolean',
        'debugbar.collectors.events' => 'boolean',
        'debugbar.collectors.default_request' => 'boolean',
        'debugbar.collectors.logs' => 'boolean',
        'debugbar.collectors.files' => 'boolean',
        'debugbar.collectors.config' => 'boolean',
        'debugbar.collectors.cache' => 'boolean',
        'debugbar.collectors.models' => 'boolean',
        'debugbar.collectors.livewire' => 'boolean',
        'debugbar.collectors.jobs' => 'boolean',
        'debugbar.collectors.pennant' => 'boolean',
        'debugbar.options.time.memory_usage' => 'boolean',
        'debugbar.options.messages.trace' => 'boolean',
        'debugbar.options.memory.reset_peak' => 'boolean',
        'debugbar.options.memory.with_baseline' => 'boolean',
        'debugbar.options.memory.precision' => 'integer',
        'debugbar.options.auth.show_name' => 'boolean',
        'debugbar.options.auth.show_guards' => 'boolean',
        'debugbar.options.db.with_params' => 'boolean',
        'debugbar.options.db.exclude_paths' => 'array',
        'debugbar.options.db.backtrace' => 'boolean',
        'debugbar.options.db.backtrace_exclude_paths' => 'array',
        'debugbar.options.db.timeline' => 'boolean',
        'debugbar.options.db.duration_background' => 'boolean',
        'debugbar.options.db.explain.enabled' => 'boolean',
        'debugbar.options.db.hints' => 'boolean',
        'debugbar.options.db.show_copy' => 'boolean',
        'debugbar.options.db.slow_threshold' => 'boolean',
        'debugbar.options.db.memory_usage' => 'boolean',
        'debugbar.options.db.soft_limit' => 'integer',
        'debugbar.options.db.hard_limit' => 'integer',
        'debugbar.options.mail.timeline' => 'boolean',
        'debugbar.options.mail.show_body' => 'boolean',
        'debugbar.options.views.timeline' => 'boolean',
        'debugbar.options.views.data' => 'boolean',
        'debugbar.options.views.group' => 'integer',
        'debugbar.options.views.exclude_paths' => 'array',
        'debugbar.options.route.label' => 'boolean',
        'debugbar.options.session.hiddens' => 'array',
        'debugbar.options.symfony_request.label' => 'boolean',
        'debugbar.options.symfony_request.hiddens' => 'array',
        'debugbar.options.events.data' => 'boolean',
        'debugbar.options.logs.file' => 'NULL',
        'debugbar.options.cache.values' => 'boolean',
        'debugbar.inject' => 'boolean',
        'debugbar.route_prefix' => 'string',
        'debugbar.route_middleware' => 'array',
        'debugbar.route_domain' => 'NULL',
        'debugbar.theme' => 'string',
        'debugbar.debug_backtrace_limit' => 'integer',
        'envy.environment_files' => 'array',
        'envy.config_files' => 'array',
        'envy.display_comments' => 'boolean',
        'envy.display_location_hints' => 'boolean',
        'envy.display_default_values' => 'boolean',
        'envy.exclude_calls_with_defaults' => 'boolean',
        'envy.exclusions' => 'array',
        'envy.inclusions' => 'array',
        'filesystems.default' => 'string',
        'filesystems.disks.local.driver' => 'string',
        'filesystems.disks.local.root' => 'string',
        'filesystems.disks.local.serve' => 'boolean',
        'filesystems.disks.local.throw' => 'boolean',
        'filesystems.disks.public.driver' => 'string',
        'filesystems.disks.public.root' => 'string',
        'filesystems.disks.public.url' => 'string',
        'filesystems.disks.public.visibility' => 'string',
        'filesystems.disks.public.throw' => 'boolean',
        'filesystems.disks.s3.driver' => 'string',
        'filesystems.disks.s3.key' => 'NULL',
        'filesystems.disks.s3.secret' => 'NULL',
        'filesystems.disks.s3.region' => 'NULL',
        'filesystems.disks.s3.bucket' => 'NULL',
        'filesystems.disks.s3.url' => 'NULL',
        'filesystems.disks.s3.endpoint' => 'NULL',
        'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
        'filesystems.disks.s3.throw' => 'boolean',
        'filesystems.links./var/www/html/public/storage' => 'string',
        'fortify.guard' => 'string',
        'fortify.middleware' => 'array',
        'fortify.auth_middleware' => 'string',
        'fortify.passwords' => 'string',
        'fortify.username' => 'string',
        'fortify.email' => 'string',
        'fortify.views' => 'boolean',
        'fortify.home' => 'string',
        'fortify.prefix' => 'string',
        'fortify.domain' => 'NULL',
        'fortify.lowercase_usernames' => 'boolean',
        'fortify.limiters.login' => 'string',
        'fortify.limiters.two-factor' => 'string',
        'fortify.paths.login' => 'NULL',
        'fortify.paths.logout' => 'NULL',
        'fortify.paths.password.request' => 'NULL',
        'fortify.paths.password.reset' => 'NULL',
        'fortify.paths.password.email' => 'NULL',
        'fortify.paths.password.update' => 'NULL',
        'fortify.paths.password.confirm' => 'NULL',
        'fortify.paths.password.confirmation' => 'NULL',
        'fortify.paths.register' => 'NULL',
        'fortify.paths.verification.notice' => 'NULL',
        'fortify.paths.verification.verify' => 'NULL',
        'fortify.paths.verification.send' => 'NULL',
        'fortify.paths.user-profile-information.update' => 'NULL',
        'fortify.paths.user-password.update' => 'NULL',
        'fortify.paths.two-factor.login' => 'NULL',
        'fortify.paths.two-factor.enable' => 'NULL',
        'fortify.paths.two-factor.confirm' => 'NULL',
        'fortify.paths.two-factor.disable' => 'NULL',
        'fortify.paths.two-factor.qr-code' => 'NULL',
        'fortify.paths.two-factor.secret-key' => 'NULL',
        'fortify.paths.two-factor.recovery-codes' => 'NULL',
        'fortify.redirects.login' => 'NULL',
        'fortify.redirects.logout' => 'NULL',
        'fortify.redirects.password-confirmation' => 'NULL',
        'fortify.redirects.register' => 'NULL',
        'fortify.redirects.email-verification' => 'NULL',
        'fortify.redirects.password-reset' => 'NULL',
        'fortify.features' => 'array',
        'gravatar.default.size' => 'integer',
        'gravatar.default.fallback' => 'string',
        'gravatar.default.secure' => 'boolean',
        'gravatar.default.maximumRating' => 'string',
        'gravatar.default.forceDefault' => 'boolean',
        'gravatar.default.forceExtension' => 'string',
        'logging.default' => 'string',
        'logging.deprecations.channel' => 'NULL',
        'logging.deprecations.trace' => 'boolean',
        'logging.channels.stack.driver' => 'string',
        'logging.channels.stack.channels' => 'array',
        'logging.channels.stack.ignore_exceptions' => 'boolean',
        'logging.channels.single.driver' => 'string',
        'logging.channels.single.path' => 'string',
        'logging.channels.single.level' => 'string',
        'logging.channels.single.replace_placeholders' => 'boolean',
        'logging.channels.daily.driver' => 'string',
        'logging.channels.daily.path' => 'string',
        'logging.channels.daily.level' => 'string',
        'logging.channels.daily.days' => 'integer',
        'logging.channels.daily.replace_placeholders' => 'boolean',
        'logging.channels.slack.driver' => 'string',
        'logging.channels.slack.url' => 'NULL',
        'logging.channels.slack.username' => 'string',
        'logging.channels.slack.emoji' => 'string',
        'logging.channels.slack.level' => 'string',
        'logging.channels.slack.replace_placeholders' => 'boolean',
        'logging.channels.papertrail.driver' => 'string',
        'logging.channels.papertrail.level' => 'string',
        'logging.channels.papertrail.handler' => 'string',
        'logging.channels.papertrail.handler_with.host' => 'NULL',
        'logging.channels.papertrail.handler_with.port' => 'NULL',
        'logging.channels.papertrail.handler_with.connectionString' => 'string',
        'logging.channels.papertrail.processors' => 'array',
        'logging.channels.stderr.driver' => 'string',
        'logging.channels.stderr.level' => 'string',
        'logging.channels.stderr.handler' => 'string',
        'logging.channels.stderr.formatter' => 'NULL',
        'logging.channels.stderr.with.stream' => 'string',
        'logging.channels.stderr.processors' => 'array',
        'logging.channels.syslog.driver' => 'string',
        'logging.channels.syslog.level' => 'string',
        'logging.channels.syslog.facility' => 'integer',
        'logging.channels.syslog.replace_placeholders' => 'boolean',
        'logging.channels.errorlog.driver' => 'string',
        'logging.channels.errorlog.level' => 'string',
        'logging.channels.errorlog.replace_placeholders' => 'boolean',
        'logging.channels.null.driver' => 'string',
        'logging.channels.null.handler' => 'string',
        'logging.channels.emergency.path' => 'string',
        'logging.channels.deprecations.driver' => 'string',
        'logging.channels.deprecations.handler' => 'string',
        'mail.default' => 'string',
        'mail.mailers.smtp.transport' => 'string',
        'mail.mailers.smtp.scheme' => 'NULL',
        'mail.mailers.smtp.url' => 'NULL',
        'mail.mailers.smtp.host' => 'string',
        'mail.mailers.smtp.port' => 'string',
        'mail.mailers.smtp.username' => 'NULL',
        'mail.mailers.smtp.password' => 'NULL',
        'mail.mailers.smtp.timeout' => 'NULL',
        'mail.mailers.smtp.local_domain' => 'string',
        'mail.mailers.ses.transport' => 'string',
        'mail.mailers.postmark.transport' => 'string',
        'mail.mailers.resend.transport' => 'string',
        'mail.mailers.sendmail.transport' => 'string',
        'mail.mailers.sendmail.path' => 'string',
        'mail.mailers.log.transport' => 'string',
        'mail.mailers.log.channel' => 'NULL',
        'mail.mailers.array.transport' => 'string',
        'mail.mailers.failover.transport' => 'string',
        'mail.mailers.failover.mailers' => 'array',
        'mail.mailers.roundrobin.transport' => 'string',
        'mail.mailers.roundrobin.mailers' => 'array',
        'mail.from.address' => 'string',
        'mail.from.name' => 'string',
        'mail.markdown.theme' => 'string',
        'mail.markdown.paths' => 'array',
        'permission.models.permission' => 'string',
        'permission.models.role' => 'string',
        'permission.table_names.roles' => 'string',
        'permission.table_names.permissions' => 'string',
        'permission.table_names.model_has_permissions' => 'string',
        'permission.table_names.model_has_roles' => 'string',
        'permission.table_names.role_has_permissions' => 'string',
        'permission.column_names.role_pivot_key' => 'NULL',
        'permission.column_names.permission_pivot_key' => 'NULL',
        'permission.column_names.model_morph_key' => 'string',
        'permission.column_names.team_foreign_key' => 'string',
        'permission.register_permission_check_method' => 'boolean',
        'permission.register_octane_reset_listener' => 'boolean',
        'permission.events_enabled' => 'boolean',
        'permission.teams' => 'boolean',
        'permission.team_resolver' => 'string',
        'permission.use_passport_client_credentials' => 'boolean',
        'permission.display_permission_in_exception' => 'boolean',
        'permission.display_role_in_exception' => 'boolean',
        'permission.enable_wildcard_permission' => 'boolean',
        'permission.cache.expiration_time' => 'object',
        'permission.cache.key' => 'string',
        'permission.cache.store' => 'string',
        'queue.default' => 'string',
        'queue.connections.sync.driver' => 'string',
        'queue.connections.database.driver' => 'string',
        'queue.connections.database.connection' => 'NULL',
        'queue.connections.database.table' => 'string',
        'queue.connections.database.queue' => 'string',
        'queue.connections.database.retry_after' => 'integer',
        'queue.connections.database.after_commit' => 'boolean',
        'queue.connections.beanstalkd.driver' => 'string',
        'queue.connections.beanstalkd.host' => 'string',
        'queue.connections.beanstalkd.queue' => 'string',
        'queue.connections.beanstalkd.retry_after' => 'integer',
        'queue.connections.beanstalkd.block_for' => 'integer',
        'queue.connections.beanstalkd.after_commit' => 'boolean',
        'queue.connections.sqs.driver' => 'string',
        'queue.connections.sqs.key' => 'NULL',
        'queue.connections.sqs.secret' => 'NULL',
        'queue.connections.sqs.prefix' => 'string',
        'queue.connections.sqs.queue' => 'string',
        'queue.connections.sqs.suffix' => 'NULL',
        'queue.connections.sqs.region' => 'string',
        'queue.connections.sqs.after_commit' => 'boolean',
        'queue.connections.redis.driver' => 'string',
        'queue.connections.redis.connection' => 'string',
        'queue.connections.redis.queue' => 'string',
        'queue.connections.redis.retry_after' => 'integer',
        'queue.connections.redis.block_for' => 'NULL',
        'queue.connections.redis.after_commit' => 'boolean',
        'queue.batching.database' => 'string',
        'queue.batching.table' => 'string',
        'queue.failed.driver' => 'string',
        'queue.failed.database' => 'string',
        'queue.failed.table' => 'string',
        'sanctum.stateful' => 'array',
        'sanctum.guard' => 'array',
        'sanctum.expiration' => 'NULL',
        'sanctum.token_prefix' => 'string',
        'sanctum.middleware.authenticate_session' => 'string',
        'sanctum.middleware.encrypt_cookies' => 'string',
        'sanctum.middleware.validate_csrf_token' => 'string',
        'services.postmark.token' => 'NULL',
        'services.ses.key' => 'NULL',
        'services.ses.secret' => 'NULL',
        'services.ses.region' => 'string',
        'services.resend.key' => 'NULL',
        'services.slack.notifications.bot_user_oauth_token' => 'NULL',
        'services.slack.notifications.channel' => 'NULL',
        'session.driver' => 'string',
        'session.lifetime' => 'string',
        'session.expire_on_close' => 'boolean',
        'session.encrypt' => 'boolean',
        'session.files' => 'string',
        'session.connection' => 'string',
        'session.table' => 'string',
        'session.store' => 'NULL',
        'session.lottery' => 'array',
        'session.cookie' => 'string',
        'session.path' => 'string',
        'session.domain' => 'NULL',
        'session.secure' => 'NULL',
        'session.http_only' => 'boolean',
        'session.same_site' => 'string',
        'session.partitioned' => 'boolean',
        'solo.theme' => 'string',
        'solo.themes.light' => 'string',
        'solo.themes.dark' => 'string',
        'solo.keybinding' => 'string',
        'solo.keybindings.default' => 'string',
        'solo.keybindings.vim' => 'string',
        'solo.commands.Sail' => 'string',
        'solo.commands.Logs' => 'object',
        'solo.commands.Dumps' => 'string',
        'solo.commands.Pest' => 'object',
        'solo.commands.Vite' => 'string',
        'solo.commands.Pint' => 'object',
        'solo.commands.Queue' => 'object',
        'solo.commands.Typescript' => 'object',
        'solo.dump_server_host' => 'string',
        'typescript-transformer.auto_discover_types' => 'array',
        'typescript-transformer.collectors' => 'array',
        'typescript-transformer.transformers' => 'array',
        'typescript-transformer.default_type_replacements.DateTime' => 'string',
        'typescript-transformer.default_type_replacements.DateTimeImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonInterface' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\CarbonImmutable' => 'string',
        'typescript-transformer.default_type_replacements.Carbon\Carbon' => 'string',
        'typescript-transformer.default_type_replacements.Illuminate\Support\Carbon' => 'string',
        'typescript-transformer.output_file' => 'string',
        'typescript-transformer.writer' => 'string',
        'typescript-transformer.formatter' => 'string',
        'typescript-transformer.transform_to_native_enums' => 'boolean',
        'typescript-transformer.transform_null_to_optional' => 'boolean',
        'hashing.driver' => 'string',
        'hashing.bcrypt.rounds' => 'string',
        'hashing.bcrypt.verify' => 'boolean',
        'hashing.bcrypt.limit' => 'NULL',
        'hashing.argon.memory' => 'integer',
        'hashing.argon.threads' => 'integer',
        'hashing.argon.time' => 'integer',
        'hashing.argon.verify' => 'boolean',
        'hashing.rehash_on_login' => 'boolean',
        'concurrency.default' => 'string',
        'broadcasting.default' => 'string',
        'broadcasting.connections.reverb.driver' => 'string',
        'broadcasting.connections.reverb.key' => 'NULL',
        'broadcasting.connections.reverb.secret' => 'NULL',
        'broadcasting.connections.reverb.app_id' => 'NULL',
        'broadcasting.connections.reverb.options.host' => 'NULL',
        'broadcasting.connections.reverb.options.port' => 'integer',
        'broadcasting.connections.reverb.options.scheme' => 'string',
        'broadcasting.connections.reverb.options.useTLS' => 'boolean',
        'broadcasting.connections.reverb.client_options' => 'array',
        'broadcasting.connections.pusher.driver' => 'string',
        'broadcasting.connections.pusher.key' => 'NULL',
        'broadcasting.connections.pusher.secret' => 'NULL',
        'broadcasting.connections.pusher.app_id' => 'NULL',
        'broadcasting.connections.pusher.options.cluster' => 'NULL',
        'broadcasting.connections.pusher.options.host' => 'string',
        'broadcasting.connections.pusher.options.port' => 'integer',
        'broadcasting.connections.pusher.options.scheme' => 'string',
        'broadcasting.connections.pusher.options.encrypted' => 'boolean',
        'broadcasting.connections.pusher.options.useTLS' => 'boolean',
        'broadcasting.connections.pusher.client_options' => 'array',
        'broadcasting.connections.ably.driver' => 'string',
        'broadcasting.connections.ably.key' => 'NULL',
        'broadcasting.connections.log.driver' => 'string',
        'broadcasting.connections.null.driver' => 'string',
        'view.paths' => 'array',
        'view.compiled' => 'string',
        'inertia.ssr.enabled' => 'boolean',
        'inertia.ssr.url' => 'string',
        'inertia.testing.ensure_pages_exist' => 'boolean',
        'inertia.testing.page_paths' => 'array',
        'inertia.testing.page_extensions' => 'array',
        'inertia.history.encrypt' => 'boolean',
        'flare.key' => 'NULL',
        'flare.flare_middleware' => 'array',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddLogs.maximum_number_of_collected_logs' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.maximum_number_of_collected_queries' => 'integer',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddQueries.report_query_bindings' => 'boolean',
        'flare.flare_middleware.Spatie\LaravelIgnition\FlareMiddleware\AddJobs.max_chained_job_reporting_depth' => 'integer',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestBodyFields.censor_fields' => 'array',
        'flare.flare_middleware.Spatie\FlareClient\FlareMiddleware\CensorRequestHeaders.headers' => 'array',
        'flare.send_logs_as_events' => 'boolean',
        'ignition.editor' => 'string',
        'ignition.theme' => 'string',
        'ignition.enable_share_button' => 'boolean',
        'ignition.register_commands' => 'boolean',
        'ignition.solution_providers' => 'array',
        'ignition.ignored_solution_providers' => 'array',
        'ignition.enable_runnable_solutions' => 'NULL',
        'ignition.remote_sites_path' => 'string',
        'ignition.local_sites_path' => 'string',
        'ignition.housekeeping_endpoint_prefix' => 'string',
        'ignition.settings_file_path' => 'string',
        'ignition.recorders' => 'array',
        'ignition.open_ai_key' => 'NULL',
        'ignition.with_stack_frame_arguments' => 'boolean',
        'ignition.argument_reducers' => 'array',
        'ide-helper.filename' => 'string',
        'ide-helper.models_filename' => 'string',
        'ide-helper.meta_filename' => 'string',
        'ide-helper.include_fluent' => 'boolean',
        'ide-helper.include_factory_builders' => 'boolean',
        'ide-helper.write_model_magic_where' => 'boolean',
        'ide-helper.write_model_external_builder_methods' => 'boolean',
        'ide-helper.write_model_relation_count_properties' => 'boolean',
        'ide-helper.write_eloquent_model_mixins' => 'boolean',
        'ide-helper.include_helpers' => 'boolean',
        'ide-helper.helper_files' => 'array',
        'ide-helper.model_locations' => 'array',
        'ide-helper.ignored_models' => 'array',
        'ide-helper.model_hooks' => 'array',
        'ide-helper.extra.Eloquent' => 'array',
        'ide-helper.extra.Session' => 'array',
        'ide-helper.magic' => 'array',
        'ide-helper.interfaces' => 'array',
        'ide-helper.model_camel_case_properties' => 'boolean',
        'ide-helper.type_overrides.integer' => 'string',
        'ide-helper.type_overrides.boolean' => 'string',
        'ide-helper.include_class_docblocks' => 'boolean',
        'ide-helper.force_fqn' => 'boolean',
        'ide-helper.use_generics_annotations' => 'boolean',
        'ide-helper.additional_relation_types' => 'array',
        'ide-helper.additional_relation_return_types' => 'array',
        'ide-helper.enforce_nullable_relationships' => 'boolean',
        'ide-helper.post_migrate' => 'array',
        'ide-helper.macroable_traits' => 'array',
        'tinker.commands' => 'array',
        'tinker.alias' => 'array',
        'tinker.dont_alias' => 'array',
    ]));


    override(InteractsWithContainer::mock(0), map(['' => "@&\Mockery\MockInterface"]));
    override(InteractsWithContainer::partialMock(0), map(['' => "@&\Mockery\MockInterface"]));
    override(InteractsWithContainer::instance(0), type(1));
    override(InteractsWithContainer::spy(0), map(['' => "@&\Mockery\MockInterface"]));
    override(Arr::add(0), type(0));
    override(Arr::except(0), type(0));
    override(Arr::first(0), elementType(0));
    override(Arr::last(0), elementType(0));
    override(Arr::get(0), elementType(0));
    override(Arr::only(0), type(0));
    override(Arr::prepend(0), type(0));
    override(Arr::pull(0), elementType(0));
    override(Arr::set(0), type(0));
    override(Arr::shuffle(0), type(0));
    override(Arr::sort(0), type(0));
    override(Arr::sortRecursive(0), type(0));
    override(Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

    registerArgumentsSet('auth', );
    registerArgumentsSet(
        'configs',
        'app.name',
        'app.env',
        'app.debug',
        'app.url',
        'app.frontend_url',
        'app.asset_url',
        'app.timezone',
        'app.locale',
        'app.fallback_locale',
        'app.faker_locale',
        'app.cipher',
        'app.key',
        'app.previous_keys',
        'app.maintenance.driver',
        'app.maintenance.store',
        'app.providers',
        'app.aliases.App',
        'app.aliases.Arr',
        'app.aliases.Artisan',
        'app.aliases.Auth',
        'app.aliases.Blade',
        'app.aliases.Broadcast',
        'app.aliases.Bus',
        'app.aliases.Cache',
        'app.aliases.Concurrency',
        'app.aliases.Config',
        'app.aliases.Context',
        'app.aliases.Cookie',
        'app.aliases.Crypt',
        'app.aliases.Date',
        'app.aliases.DB',
        'app.aliases.Eloquent',
        'app.aliases.Event',
        'app.aliases.File',
        'app.aliases.Gate',
        'app.aliases.Hash',
        'app.aliases.Http',
        'app.aliases.Js',
        'app.aliases.Lang',
        'app.aliases.Log',
        'app.aliases.Mail',
        'app.aliases.Notification',
        'app.aliases.Number',
        'app.aliases.Password',
        'app.aliases.Process',
        'app.aliases.Queue',
        'app.aliases.RateLimiter',
        'app.aliases.Redirect',
        'app.aliases.Request',
        'app.aliases.Response',
        'app.aliases.Route',
        'app.aliases.Schedule',
        'app.aliases.Schema',
        'app.aliases.Session',
        'app.aliases.Storage',
        'app.aliases.Str',
        'app.aliases.URL',
        'app.aliases.Uri',
        'app.aliases.Validator',
        'app.aliases.View',
        'app.aliases.Vite',
        'auth.defaults.guard',
        'auth.defaults.passwords',
        'auth.guards.web.driver',
        'auth.guards.web.provider',
        'auth.guards.sanctum.driver',
        'auth.guards.sanctum.provider',
        'auth.providers.users.driver',
        'auth.providers.users.model',
        'auth.passwords.users.provider',
        'auth.passwords.users.table',
        'auth.passwords.users.expire',
        'auth.passwords.users.throttle',
        'auth.password_timeout',
        'beacon.teams.invitation_expiration',
        'cache.default',
        'cache.stores.array.driver',
        'cache.stores.array.serialize',
        'cache.stores.database.driver',
        'cache.stores.database.connection',
        'cache.stores.database.table',
        'cache.stores.database.lock_connection',
        'cache.stores.database.lock_table',
        'cache.stores.file.driver',
        'cache.stores.file.path',
        'cache.stores.file.lock_path',
        'cache.stores.memcached.driver',
        'cache.stores.memcached.persistent_id',
        'cache.stores.memcached.sasl',
        'cache.stores.memcached.options',
        'cache.stores.memcached.servers.0.host',
        'cache.stores.memcached.servers.0.port',
        'cache.stores.memcached.servers.0.weight',
        'cache.stores.redis.driver',
        'cache.stores.redis.connection',
        'cache.stores.redis.lock_connection',
        'cache.stores.dynamodb.driver',
        'cache.stores.dynamodb.key',
        'cache.stores.dynamodb.secret',
        'cache.stores.dynamodb.region',
        'cache.stores.dynamodb.table',
        'cache.stores.dynamodb.endpoint',
        'cache.stores.octane.driver',
        'cache.prefix',
        'cors.paths',
        'cors.allowed_methods',
        'cors.allowed_origins',
        'cors.allowed_origins_patterns',
        'cors.allowed_headers',
        'cors.exposed_headers',
        'cors.max_age',
        'cors.supports_credentials',
        'database.default',
        'database.connections.sqlite.driver',
        'database.connections.sqlite.url',
        'database.connections.sqlite.database',
        'database.connections.sqlite.prefix',
        'database.connections.sqlite.foreign_key_constraints',
        'database.connections.sqlite.busy_timeout',
        'database.connections.sqlite.journal_mode',
        'database.connections.sqlite.synchronous',
        'database.connections.mysql.driver',
        'database.connections.mysql.url',
        'database.connections.mysql.host',
        'database.connections.mysql.port',
        'database.connections.mysql.database',
        'database.connections.mysql.username',
        'database.connections.mysql.password',
        'database.connections.mysql.unix_socket',
        'database.connections.mysql.charset',
        'database.connections.mysql.collation',
        'database.connections.mysql.prefix',
        'database.connections.mysql.prefix_indexes',
        'database.connections.mysql.strict',
        'database.connections.mysql.engine',
        'database.connections.mysql.options',
        'database.connections.mariadb.driver',
        'database.connections.mariadb.url',
        'database.connections.mariadb.host',
        'database.connections.mariadb.port',
        'database.connections.mariadb.database',
        'database.connections.mariadb.username',
        'database.connections.mariadb.password',
        'database.connections.mariadb.unix_socket',
        'database.connections.mariadb.charset',
        'database.connections.mariadb.collation',
        'database.connections.mariadb.prefix',
        'database.connections.mariadb.prefix_indexes',
        'database.connections.mariadb.strict',
        'database.connections.mariadb.engine',
        'database.connections.mariadb.options',
        'database.connections.pgsql.driver',
        'database.connections.pgsql.url',
        'database.connections.pgsql.host',
        'database.connections.pgsql.port',
        'database.connections.pgsql.database',
        'database.connections.pgsql.username',
        'database.connections.pgsql.password',
        'database.connections.pgsql.charset',
        'database.connections.pgsql.prefix',
        'database.connections.pgsql.prefix_indexes',
        'database.connections.pgsql.search_path',
        'database.connections.pgsql.sslmode',
        'database.connections.sqlsrv.driver',
        'database.connections.sqlsrv.url',
        'database.connections.sqlsrv.host',
        'database.connections.sqlsrv.port',
        'database.connections.sqlsrv.database',
        'database.connections.sqlsrv.username',
        'database.connections.sqlsrv.password',
        'database.connections.sqlsrv.charset',
        'database.connections.sqlsrv.prefix',
        'database.connections.sqlsrv.prefix_indexes',
        'database.migrations.table',
        'database.migrations.update_date_on_publish',
        'database.redis.client',
        'database.redis.options.cluster',
        'database.redis.options.prefix',
        'database.redis.default.url',
        'database.redis.default.host',
        'database.redis.default.username',
        'database.redis.default.password',
        'database.redis.default.port',
        'database.redis.default.database',
        'database.redis.cache.url',
        'database.redis.cache.host',
        'database.redis.cache.username',
        'database.redis.cache.password',
        'database.redis.cache.port',
        'database.redis.cache.database',
        'database.redis.session.url',
        'database.redis.session.host',
        'database.redis.session.username',
        'database.redis.session.password',
        'database.redis.session.port',
        'database.redis.session.database',
        'debugbar.enabled',
        'debugbar.hide_empty_tabs',
        'debugbar.except',
        'debugbar.storage.enabled',
        'debugbar.storage.open',
        'debugbar.storage.driver',
        'debugbar.storage.path',
        'debugbar.storage.connection',
        'debugbar.storage.provider',
        'debugbar.storage.hostname',
        'debugbar.storage.port',
        'debugbar.editor',
        'debugbar.remote_sites_path',
        'debugbar.local_sites_path',
        'debugbar.include_vendors',
        'debugbar.capture_ajax',
        'debugbar.add_ajax_timing',
        'debugbar.ajax_handler_auto_show',
        'debugbar.ajax_handler_enable_tab',
        'debugbar.defer_datasets',
        'debugbar.error_handler',
        'debugbar.clockwork',
        'debugbar.collectors.phpinfo',
        'debugbar.collectors.messages',
        'debugbar.collectors.time',
        'debugbar.collectors.memory',
        'debugbar.collectors.exceptions',
        'debugbar.collectors.log',
        'debugbar.collectors.db',
        'debugbar.collectors.views',
        'debugbar.collectors.route',
        'debugbar.collectors.auth',
        'debugbar.collectors.gate',
        'debugbar.collectors.session',
        'debugbar.collectors.symfony_request',
        'debugbar.collectors.mail',
        'debugbar.collectors.laravel',
        'debugbar.collectors.events',
        'debugbar.collectors.default_request',
        'debugbar.collectors.logs',
        'debugbar.collectors.files',
        'debugbar.collectors.config',
        'debugbar.collectors.cache',
        'debugbar.collectors.models',
        'debugbar.collectors.livewire',
        'debugbar.collectors.jobs',
        'debugbar.collectors.pennant',
        'debugbar.options.time.memory_usage',
        'debugbar.options.messages.trace',
        'debugbar.options.memory.reset_peak',
        'debugbar.options.memory.with_baseline',
        'debugbar.options.memory.precision',
        'debugbar.options.auth.show_name',
        'debugbar.options.auth.show_guards',
        'debugbar.options.db.with_params',
        'debugbar.options.db.exclude_paths',
        'debugbar.options.db.backtrace',
        'debugbar.options.db.backtrace_exclude_paths',
        'debugbar.options.db.timeline',
        'debugbar.options.db.duration_background',
        'debugbar.options.db.explain.enabled',
        'debugbar.options.db.hints',
        'debugbar.options.db.show_copy',
        'debugbar.options.db.slow_threshold',
        'debugbar.options.db.memory_usage',
        'debugbar.options.db.soft_limit',
        'debugbar.options.db.hard_limit',
        'debugbar.options.mail.timeline',
        'debugbar.options.mail.show_body',
        'debugbar.options.views.timeline',
        'debugbar.options.views.data',
        'debugbar.options.views.group',
        'debugbar.options.views.exclude_paths',
        'debugbar.options.route.label',
        'debugbar.options.session.hiddens',
        'debugbar.options.symfony_request.label',
        'debugbar.options.symfony_request.hiddens',
        'debugbar.options.events.data',
        'debugbar.options.logs.file',
        'debugbar.options.cache.values',
        'debugbar.inject',
        'debugbar.route_prefix',
        'debugbar.route_middleware',
        'debugbar.route_domain',
        'debugbar.theme',
        'debugbar.debug_backtrace_limit',
        'envy.environment_files',
        'envy.config_files',
        'envy.display_comments',
        'envy.display_location_hints',
        'envy.display_default_values',
        'envy.exclude_calls_with_defaults',
        'envy.exclusions',
        'envy.inclusions',
        'filesystems.default',
        'filesystems.disks.local.driver',
        'filesystems.disks.local.root',
        'filesystems.disks.local.serve',
        'filesystems.disks.local.throw',
        'filesystems.disks.public.driver',
        'filesystems.disks.public.root',
        'filesystems.disks.public.url',
        'filesystems.disks.public.visibility',
        'filesystems.disks.public.throw',
        'filesystems.disks.s3.driver',
        'filesystems.disks.s3.key',
        'filesystems.disks.s3.secret',
        'filesystems.disks.s3.region',
        'filesystems.disks.s3.bucket',
        'filesystems.disks.s3.url',
        'filesystems.disks.s3.endpoint',
        'filesystems.disks.s3.use_path_style_endpoint',
        'filesystems.disks.s3.throw',
        'filesystems.links./var/www/html/public/storage',
        'fortify.guard',
        'fortify.middleware',
        'fortify.auth_middleware',
        'fortify.passwords',
        'fortify.username',
        'fortify.email',
        'fortify.views',
        'fortify.home',
        'fortify.prefix',
        'fortify.domain',
        'fortify.lowercase_usernames',
        'fortify.limiters.login',
        'fortify.limiters.two-factor',
        'fortify.paths.login',
        'fortify.paths.logout',
        'fortify.paths.password.request',
        'fortify.paths.password.reset',
        'fortify.paths.password.email',
        'fortify.paths.password.update',
        'fortify.paths.password.confirm',
        'fortify.paths.password.confirmation',
        'fortify.paths.register',
        'fortify.paths.verification.notice',
        'fortify.paths.verification.verify',
        'fortify.paths.verification.send',
        'fortify.paths.user-profile-information.update',
        'fortify.paths.user-password.update',
        'fortify.paths.two-factor.login',
        'fortify.paths.two-factor.enable',
        'fortify.paths.two-factor.confirm',
        'fortify.paths.two-factor.disable',
        'fortify.paths.two-factor.qr-code',
        'fortify.paths.two-factor.secret-key',
        'fortify.paths.two-factor.recovery-codes',
        'fortify.redirects.login',
        'fortify.redirects.logout',
        'fortify.redirects.password-confirmation',
        'fortify.redirects.register',
        'fortify.redirects.email-verification',
        'fortify.redirects.password-reset',
        'fortify.features',
        'gravatar.default.size',
        'gravatar.default.fallback',
        'gravatar.default.secure',
        'gravatar.default.maximumRating',
        'gravatar.default.forceDefault',
        'gravatar.default.forceExtension',
        'logging.default',
        'logging.deprecations.channel',
        'logging.deprecations.trace',
        'logging.channels.stack.driver',
        'logging.channels.stack.channels',
        'logging.channels.stack.ignore_exceptions',
        'logging.channels.single.driver',
        'logging.channels.single.path',
        'logging.channels.single.level',
        'logging.channels.single.replace_placeholders',
        'logging.channels.daily.driver',
        'logging.channels.daily.path',
        'logging.channels.daily.level',
        'logging.channels.daily.days',
        'logging.channels.daily.replace_placeholders',
        'logging.channels.slack.driver',
        'logging.channels.slack.url',
        'logging.channels.slack.username',
        'logging.channels.slack.emoji',
        'logging.channels.slack.level',
        'logging.channels.slack.replace_placeholders',
        'logging.channels.papertrail.driver',
        'logging.channels.papertrail.level',
        'logging.channels.papertrail.handler',
        'logging.channels.papertrail.handler_with.host',
        'logging.channels.papertrail.handler_with.port',
        'logging.channels.papertrail.handler_with.connectionString',
        'logging.channels.papertrail.processors',
        'logging.channels.stderr.driver',
        'logging.channels.stderr.level',
        'logging.channels.stderr.handler',
        'logging.channels.stderr.formatter',
        'logging.channels.stderr.with.stream',
        'logging.channels.stderr.processors',
        'logging.channels.syslog.driver',
        'logging.channels.syslog.level',
        'logging.channels.syslog.facility',
        'logging.channels.syslog.replace_placeholders',
        'logging.channels.errorlog.driver',
        'logging.channels.errorlog.level',
        'logging.channels.errorlog.replace_placeholders',
        'logging.channels.null.driver',
        'logging.channels.null.handler',
        'logging.channels.emergency.path',
        'logging.channels.deprecations.driver',
        'logging.channels.deprecations.handler',
        'mail.default',
        'mail.mailers.smtp.transport',
        'mail.mailers.smtp.scheme',
        'mail.mailers.smtp.url',
        'mail.mailers.smtp.host',
        'mail.mailers.smtp.port',
        'mail.mailers.smtp.username',
        'mail.mailers.smtp.password',
        'mail.mailers.smtp.timeout',
        'mail.mailers.smtp.local_domain',
        'mail.mailers.ses.transport',
        'mail.mailers.postmark.transport',
        'mail.mailers.resend.transport',
        'mail.mailers.sendmail.transport',
        'mail.mailers.sendmail.path',
        'mail.mailers.log.transport',
        'mail.mailers.log.channel',
        'mail.mailers.array.transport',
        'mail.mailers.failover.transport',
        'mail.mailers.failover.mailers',
        'mail.mailers.roundrobin.transport',
        'mail.mailers.roundrobin.mailers',
        'mail.from.address',
        'mail.from.name',
        'mail.markdown.theme',
        'mail.markdown.paths',
        'permission.models.permission',
        'permission.models.role',
        'permission.table_names.roles',
        'permission.table_names.permissions',
        'permission.table_names.model_has_permissions',
        'permission.table_names.model_has_roles',
        'permission.table_names.role_has_permissions',
        'permission.column_names.role_pivot_key',
        'permission.column_names.permission_pivot_key',
        'permission.column_names.model_morph_key',
        'permission.column_names.team_foreign_key',
        'permission.register_permission_check_method',
        'permission.register_octane_reset_listener',
        'permission.events_enabled',
        'permission.teams',
        'permission.team_resolver',
        'permission.use_passport_client_credentials',
        'permission.display_permission_in_exception',
        'permission.display_role_in_exception',
        'permission.enable_wildcard_permission',
        'permission.cache.expiration_time',
        'permission.cache.key',
        'permission.cache.store',
        'queue.default',
        'queue.connections.sync.driver',
        'queue.connections.database.driver',
        'queue.connections.database.connection',
        'queue.connections.database.table',
        'queue.connections.database.queue',
        'queue.connections.database.retry_after',
        'queue.connections.database.after_commit',
        'queue.connections.beanstalkd.driver',
        'queue.connections.beanstalkd.host',
        'queue.connections.beanstalkd.queue',
        'queue.connections.beanstalkd.retry_after',
        'queue.connections.beanstalkd.block_for',
        'queue.connections.beanstalkd.after_commit',
        'queue.connections.sqs.driver',
        'queue.connections.sqs.key',
        'queue.connections.sqs.secret',
        'queue.connections.sqs.prefix',
        'queue.connections.sqs.queue',
        'queue.connections.sqs.suffix',
        'queue.connections.sqs.region',
        'queue.connections.sqs.after_commit',
        'queue.connections.redis.driver',
        'queue.connections.redis.connection',
        'queue.connections.redis.queue',
        'queue.connections.redis.retry_after',
        'queue.connections.redis.block_for',
        'queue.connections.redis.after_commit',
        'queue.batching.database',
        'queue.batching.table',
        'queue.failed.driver',
        'queue.failed.database',
        'queue.failed.table',
        'sanctum.stateful',
        'sanctum.guard',
        'sanctum.expiration',
        'sanctum.token_prefix',
        'sanctum.middleware.authenticate_session',
        'sanctum.middleware.encrypt_cookies',
        'sanctum.middleware.validate_csrf_token',
        'services.postmark.token',
        'services.ses.key',
        'services.ses.secret',
        'services.ses.region',
        'services.resend.key',
        'services.slack.notifications.bot_user_oauth_token',
        'services.slack.notifications.channel',
        'session.driver',
        'session.lifetime',
        'session.expire_on_close',
        'session.encrypt',
        'session.files',
        'session.connection',
        'session.table',
        'session.store',
        'session.lottery',
        'session.cookie',
        'session.path',
        'session.domain',
        'session.secure',
        'session.http_only',
        'session.same_site',
        'session.partitioned',
        'solo.theme',
        'solo.themes.light',
        'solo.themes.dark',
        'solo.keybinding',
        'solo.keybindings.default',
        'solo.keybindings.vim',
        'solo.commands.Sail',
        'solo.commands.Logs',
        'solo.commands.Dumps',
        'solo.commands.Pest',
        'solo.commands.Vite',
        'solo.commands.Pint',
        'solo.commands.Queue',
        'solo.commands.Typescript',
        'solo.dump_server_host',
        'typescript-transformer.auto_discover_types',
        'typescript-transformer.collectors',
        'typescript-transformer.transformers',
        'typescript-transformer.default_type_replacements.DateTime',
        'typescript-transformer.default_type_replacements.DateTimeImmutable',
        'typescript-transformer.default_type_replacements.Carbon\\CarbonInterface',
        'typescript-transformer.default_type_replacements.Carbon\\CarbonImmutable',
        'typescript-transformer.default_type_replacements.Carbon\\Carbon',
        'typescript-transformer.default_type_replacements.Illuminate\\Support\\Carbon',
        'typescript-transformer.output_file',
        'typescript-transformer.writer',
        'typescript-transformer.formatter',
        'typescript-transformer.transform_to_native_enums',
        'typescript-transformer.transform_null_to_optional',
        'hashing.driver',
        'hashing.bcrypt.rounds',
        'hashing.bcrypt.verify',
        'hashing.bcrypt.limit',
        'hashing.argon.memory',
        'hashing.argon.threads',
        'hashing.argon.time',
        'hashing.argon.verify',
        'hashing.rehash_on_login',
        'concurrency.default',
        'broadcasting.default',
        'broadcasting.connections.reverb.driver',
        'broadcasting.connections.reverb.key',
        'broadcasting.connections.reverb.secret',
        'broadcasting.connections.reverb.app_id',
        'broadcasting.connections.reverb.options.host',
        'broadcasting.connections.reverb.options.port',
        'broadcasting.connections.reverb.options.scheme',
        'broadcasting.connections.reverb.options.useTLS',
        'broadcasting.connections.reverb.client_options',
        'broadcasting.connections.pusher.driver',
        'broadcasting.connections.pusher.key',
        'broadcasting.connections.pusher.secret',
        'broadcasting.connections.pusher.app_id',
        'broadcasting.connections.pusher.options.cluster',
        'broadcasting.connections.pusher.options.host',
        'broadcasting.connections.pusher.options.port',
        'broadcasting.connections.pusher.options.scheme',
        'broadcasting.connections.pusher.options.encrypted',
        'broadcasting.connections.pusher.options.useTLS',
        'broadcasting.connections.pusher.client_options',
        'broadcasting.connections.ably.driver',
        'broadcasting.connections.ably.key',
        'broadcasting.connections.log.driver',
        'broadcasting.connections.null.driver',
        'view.paths',
        'view.compiled',
        'inertia.ssr.enabled',
        'inertia.ssr.url',
        'inertia.testing.ensure_pages_exist',
        'inertia.testing.page_paths',
        'inertia.testing.page_extensions',
        'inertia.history.encrypt',
        'flare.key',
        'flare.flare_middleware',
        'flare.flare_middleware.Spatie\\LaravelIgnition\\FlareMiddleware\\AddLogs.maximum_number_of_collected_logs',
        'flare.flare_middleware.Spatie\\LaravelIgnition\\FlareMiddleware\\AddQueries.maximum_number_of_collected_queries',
        'flare.flare_middleware.Spatie\\LaravelIgnition\\FlareMiddleware\\AddQueries.report_query_bindings',
        'flare.flare_middleware.Spatie\\LaravelIgnition\\FlareMiddleware\\AddJobs.max_chained_job_reporting_depth',
        'flare.flare_middleware.Spatie\\FlareClient\\FlareMiddleware\\CensorRequestBodyFields.censor_fields',
        'flare.flare_middleware.Spatie\\FlareClient\\FlareMiddleware\\CensorRequestHeaders.headers',
        'flare.send_logs_as_events',
        'ignition.editor',
        'ignition.theme',
        'ignition.enable_share_button',
        'ignition.register_commands',
        'ignition.solution_providers',
        'ignition.ignored_solution_providers',
        'ignition.enable_runnable_solutions',
        'ignition.remote_sites_path',
        'ignition.local_sites_path',
        'ignition.housekeeping_endpoint_prefix',
        'ignition.settings_file_path',
        'ignition.recorders',
        'ignition.open_ai_key',
        'ignition.with_stack_frame_arguments',
        'ignition.argument_reducers',
        'ide-helper.filename',
        'ide-helper.models_filename',
        'ide-helper.meta_filename',
        'ide-helper.include_fluent',
        'ide-helper.include_factory_builders',
        'ide-helper.write_model_magic_where',
        'ide-helper.write_model_external_builder_methods',
        'ide-helper.write_model_relation_count_properties',
        'ide-helper.write_eloquent_model_mixins',
        'ide-helper.include_helpers',
        'ide-helper.helper_files',
        'ide-helper.model_locations',
        'ide-helper.ignored_models',
        'ide-helper.model_hooks',
        'ide-helper.extra.Eloquent',
        'ide-helper.extra.Session',
        'ide-helper.magic',
        'ide-helper.interfaces',
        'ide-helper.model_camel_case_properties',
        'ide-helper.type_overrides.integer',
        'ide-helper.type_overrides.boolean',
        'ide-helper.include_class_docblocks',
        'ide-helper.force_fqn',
        'ide-helper.use_generics_annotations',
        'ide-helper.additional_relation_types',
        'ide-helper.additional_relation_return_types',
        'ide-helper.enforce_nullable_relationships',
        'ide-helper.post_migrate',
        'ide-helper.macroable_traits',
        'tinker.commands',
        'tinker.alias',
        'tinker.dont_alias',
    );
    registerArgumentsSet(
        'middleware',
        'web',
        'api',
        'auth',
        'auth.basic',
        'auth.session',
        'cache.headers',
        'can',
        'guest',
        'password.confirm',
        'precognitive',
        'signed',
        'throttle',
        'verified',
    );
    registerArgumentsSet(
        'routes',
        'debugbar.openhandler',
        'debugbar.clockwork',
        'debugbar.assets.css',
        'debugbar.assets.js',
        'debugbar.cache.delete',
        'debugbar.queries.explain',
        'login.store',
        'logout',
        'password.email',
        'password.update',
        'register.store',
        'verification.verify',
        'verification.send',
        'user-profile-information.update',
        'user-password.update',
        'password.confirmation',
        'password.confirm.store',
        'two-factor.login.store',
        'two-factor.enable',
        'two-factor.confirm',
        'two-factor.disable',
        'two-factor.qr-code',
        'two-factor.secret-key',
        'two-factor.recovery-codes',
        'sanctum.csrf-cookie',
        'ignition.healthCheck',
        'ignition.executeSolution',
        'ignition.updateConfig',
        'dashboard',
        'profile.edit',
        'profile.update',
        'profile.destroy',
        'teams.accept-invite',
        'applications.index',
        'applications.store',
        'applications.edit',
        'applications.update',
        'applications.destroy',
        'environments.index',
        'environments.store',
        'environments.edit',
        'environments.update',
        'environments.destroy',
        'feature-flags.index',
        'feature-flags.store',
        'feature-flags.edit',
        'feature-flags.update',
        'feature-flags.destroy',
        'feature-types.index',
        'feature-types.store',
        'feature-types.edit',
        'feature-types.update',
        'feature-types.destroy',
        'tags.index',
        'tags.store',
        'tags.edit',
        'tags.update',
        'tags.destroy',
        'settings.index',
        'policies.index',
        'policies.store',
        'policies.edit',
        'policies.update',
        'policies.destroy',
        'team-members.invite',
        'team-members.delete',
        'teams.index',
        'teams.store',
        'teams.edit',
        'teams.update',
        'teams.destroy',
        'access-tokens.index',
        'organizations.index',
        'organizations.store',
        'organizations.edit',
        'organizations.update',
        'organizations.destroy',
        'policies.update',
        'policies.update',
        'feature-flags.edit.overview',
        'feature-flags.edit.policy',
        'register',
        'login',
        'password.request',
        'verification.notice',
        'verification.verify',
        'password.confirm',
        'two-factor.setup',
        'two-factor.confirmed',
        'two-factor.login',
        'teams.select',
        'teams.choose',
        'organizations.choose',
        'api.feature-flags.index',
        'api.feature-flags.show',
        'api.access-tokens.store',
        'api.access-tokens.show',
        'api.access-tokens.destroy',
        'storage.local',
    );
    registerArgumentsSet(
        'views',
        'app',
        'notifications::email',
        'vendor.mail.html.button',
        'vendor.mail.html.footer',
        'vendor.mail.html.header',
        'vendor.mail.html.layout',
        'vendor.mail.html.message',
        'vendor.mail.html.panel',
        'vendor.mail.html.subcopy',
        'vendor.mail.html.table',
        'vendor.mail.text.button',
        'vendor.mail.text.footer',
        'vendor.mail.text.header',
        'vendor.mail.text.layout',
        'vendor.mail.text.message',
        'vendor.mail.text.panel',
        'vendor.mail.text.subcopy',
        'vendor.mail.text.table',
        'vendor.notifications.email',
        'laravel-exceptions-renderer::components.card',
        'laravel-exceptions-renderer::components.context',
        'laravel-exceptions-renderer::components.editor',
        'laravel-exceptions-renderer::components.header',
        'laravel-exceptions-renderer::components.icons.chevron-down',
        'laravel-exceptions-renderer::components.icons.chevron-up',
        'laravel-exceptions-renderer::components.icons.computer-desktop',
        'laravel-exceptions-renderer::components.icons.moon',
        'laravel-exceptions-renderer::components.icons.sun',
        'laravel-exceptions-renderer::components.layout',
        'laravel-exceptions-renderer::components.navigation',
        'laravel-exceptions-renderer::components.theme-switcher',
        'laravel-exceptions-renderer::components.trace',
        'laravel-exceptions-renderer::components.trace-and-editor',
        'laravel-exceptions-renderer::show',
        'laravel-exceptions::401',
        'laravel-exceptions::402',
        'laravel-exceptions::403',
        'laravel-exceptions::404',
        'laravel-exceptions::419',
        'laravel-exceptions::429',
        'laravel-exceptions::500',
        'laravel-exceptions::503',
        'laravel-exceptions::layout',
        'laravel-exceptions::minimal',
        'notifications::email',
        'pagination::bootstrap-4',
        'pagination::bootstrap-5',
        'pagination::default',
        'pagination::semantic-ui',
        'pagination::simple-bootstrap-4',
        'pagination::simple-bootstrap-5',
        'pagination::simple-default',
        'pagination::simple-tailwind',
        'pagination::tailwind',
    );
    registerArgumentsSet(
        'translations',
        'auth.failed',
        'auth.password',
        'auth.throttle',
        'pagination.previous',
        'pagination.next',
        'passwords.reset',
        'passwords.sent',
        'passwords.throttled',
        'passwords.token',
        'passwords.user',
        'validation.accepted',
        'validation.accepted_if',
        'validation.active_url',
        'validation.after',
        'validation.after_or_equal',
        'validation.alpha',
        'validation.alpha_dash',
        'validation.alpha_num',
        'validation.array',
        'validation.ascii',
        'validation.before',
        'validation.before_or_equal',
        'validation.between.array',
        'validation.between.file',
        'validation.between.numeric',
        'validation.between.string',
        'validation.boolean',
        'validation.can',
        'validation.confirmed',
        'validation.contains',
        'validation.current_password',
        'validation.date',
        'validation.date_equals',
        'validation.date_format',
        'validation.decimal',
        'validation.declined',
        'validation.declined_if',
        'validation.different',
        'validation.digits',
        'validation.digits_between',
        'validation.dimensions',
        'validation.distinct',
        'validation.doesnt_end_with',
        'validation.doesnt_start_with',
        'validation.email',
        'validation.ends_with',
        'validation.enum',
        'validation.exists',
        'validation.extensions',
        'validation.file',
        'validation.filled',
        'validation.gt.array',
        'validation.gt.file',
        'validation.gt.numeric',
        'validation.gt.string',
        'validation.gte.array',
        'validation.gte.file',
        'validation.gte.numeric',
        'validation.gte.string',
        'validation.hex_color',
        'validation.image',
        'validation.in',
        'validation.in_array',
        'validation.integer',
        'validation.ip',
        'validation.ipv4',
        'validation.ipv6',
        'validation.json',
        'validation.list',
        'validation.lowercase',
        'validation.lt.array',
        'validation.lt.file',
        'validation.lt.numeric',
        'validation.lt.string',
        'validation.lte.array',
        'validation.lte.file',
        'validation.lte.numeric',
        'validation.lte.string',
        'validation.mac_address',
        'validation.max.array',
        'validation.max.file',
        'validation.max.numeric',
        'validation.max.string',
        'validation.max_digits',
        'validation.mimes',
        'validation.mimetypes',
        'validation.min.array',
        'validation.min.file',
        'validation.min.numeric',
        'validation.min.string',
        'validation.min_digits',
        'validation.missing',
        'validation.missing_if',
        'validation.missing_unless',
        'validation.missing_with',
        'validation.missing_with_all',
        'validation.multiple_of',
        'validation.not_in',
        'validation.not_regex',
        'validation.numeric',
        'validation.password.letters',
        'validation.password.mixed',
        'validation.password.numbers',
        'validation.password.symbols',
        'validation.password.uncompromised',
        'validation.present',
        'validation.present_if',
        'validation.present_unless',
        'validation.present_with',
        'validation.present_with_all',
        'validation.prohibited',
        'validation.prohibited_if',
        'validation.prohibited_if_accepted',
        'validation.prohibited_if_declined',
        'validation.prohibited_unless',
        'validation.prohibits',
        'validation.regex',
        'validation.required',
        'validation.required_array_keys',
        'validation.required_if',
        'validation.required_if_accepted',
        'validation.required_if_declined',
        'validation.required_unless',
        'validation.required_with',
        'validation.required_with_all',
        'validation.required_without',
        'validation.required_without_all',
        'validation.same',
        'validation.size.array',
        'validation.size.file',
        'validation.size.numeric',
        'validation.size.string',
        'validation.starts_with',
        'validation.string',
        'validation.timezone',
        'validation.unique',
        'validation.uploaded',
        'validation.uppercase',
        'validation.url',
        'validation.ulid',
        'validation.uuid',
        'validation.custom.attribute-name.rule-name',
    );
    registerArgumentsSet(
        'env',
        'APP_NAME',
        'APP_ENV',
        'APP_KEY',
        'APP_DEBUG',
        'APP_TIMEZONE',
        'APP_URL',
        'APP_LOCALE',
        'APP_FALLBACK_LOCALE',
        'APP_FAKER_LOCALE',
        'APP_SERVICE',
        'APP_PORT',
        'VITE_PORT',
        'APP_MAINTENANCE_DRIVER',
        'PHP_CLI_SERVER_WORKERS',
        'BCRYPT_ROUNDS',
        'LOG_CHANNEL',
        'LOG_STACK',
        'LOG_DEPRECATIONS_CHANNEL',
        'LOG_LEVEL',
        'DB_CONNECTION',
        'DB_HOST',
        'DB_PORT',
        'DB_DATABASE',
        'DB_USERNAME',
        'DB_PASSWORD',
        'DB_SEARCH_PATH',
        'SESSION_DRIVER',
        'SESSION_LIFETIME',
        'SESSION_ENCRYPT',
        'SESSION_PATH',
        'SESSION_DOMAIN',
        'SESSION_CONNECTION',
        'BROADCAST_CONNECTION',
        'FILESYSTEM_DISK',
        'QUEUE_CONNECTION',
        'CACHE_STORE',
        'CACHE_PREFIX',
        'REDIS_CLIENT',
        'REDIS_HOST',
        'REDIS_PASSWORD',
        'REDIS_PORT',
        'REDIS_DB',
        'REDIS_CACHE_DB',
        'REDIS_SESSION_DB',
        'MAIL_MAILER',
        'MAIL_HOST',
        'MAIL_PORT',
        'MAIL_USERNAME',
        'MAIL_PASSWORD',
        'MAIL_ENCRYPTION',
        'MAIL_FROM_ADDRESS',
        'MAIL_FROM_NAME',
        'VITE_APP_NAME',
        'SAIL_XDEBUG_MODE',
        'PHP_IDE_CONFIG',
        'IGNITION_EDITOR',
        'IGNITION_LOCAL_SITES_PATH',
        'IGNITION_REMOTE_SITES_PATH',
        'IGNITION_SHARING_ENABLED',
        'SANCTUM_TOKEN_PREFIX',
        'SANCTUM_STATEFUL_DOMAINS',
        'USER_INVITATION_EXPIRATION',
    );

    expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
    expectedArguments(Route::can(), 0, argumentsSet('auth'));
    expectedArguments(Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(Authorizable::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(Config::set(), 0, argumentsSet('configs'));
    expectedArguments(Config::string(), 0, argumentsSet('configs'));
    expectedArguments(Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(Config::float(), 0, argumentsSet('configs'));
    expectedArguments(Config::array(), 0, argumentsSet('configs'));
    expectedArguments(Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(Config::push(), 0, argumentsSet('configs'));
    expectedArguments(Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(Router::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(URL::route(), 0, argumentsSet('routes'));
    expectedArguments(URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\view(), 0, argumentsSet('views'));
    expectedArguments(View::make(), 0, argumentsSet('views'));
    expectedArguments(Factory::make(), 0, argumentsSet('views'));
    expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
    expectedArguments(Translator::get(), 0, argumentsSet('translations'));
    expectedArguments(\env(), 0, argumentsSet('env'));
    expectedArguments(Env::get(), 0, argumentsSet('env'));

}
